import nextcord as discord
from nextcord.ext import tasks, commands
import io
import sys
import random
from random import choice
import asyncio
import time
import pymongo
import pprint

sys.path.append("..")
from functions import functions as funs
import config

client = funs.mongo_c()
db = client.bot
servers = db.servers
settings = db.settings

class help(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(aliases=["–ø–æ–º–æ—â—å", "h", "—Ä—É–¥–∑", '—Ö–µ–ª–ø'], description='–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏.', usage = '-')
    async def help(self, ctx, *, command = None):
        server = servers.find_one({'server':ctx.guild.id})
        if command != None:
            com = self.bot.get_command("".join(command))
            if com != None:

                emb = discord.Embed(title = f"‚ùî | –ö–æ–º–∞–Ω–¥–∞ {com.name}\n" , description = f'{com.description}',
                color=server['embed_color'])
                emb.set_footer(text = '() - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, [] - –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç')
                emb.add_field(name = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ', value = f'`{ctx.prefix}{com.name} {com.usage}`')

                if com.aliases != []:
                    emb.add_field(name = '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω.', value = f'{", ".join(com.aliases)}')
                if com.help != None:
                    emb.add_field(name = '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', value = f'{com.help}')

                await ctx.send(embed=emb)
            else:
                await ctx.send("–ö–æ–º–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

        if command == None:
            emb = discord.Embed(title="–ö–æ–º–∞–Ω–¥—ã", description = f"–ü—Ä–µ—Ñ–∏–∫—Å {ctx.prefix}\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ {ctx.prefix}help (command)" ,color=server['embed_color'])
            cogs = {}
            for c in self.bot.commands:
                if c.hidden != True:
                    if c.name != 'help':
                        try:
                            cogs[c.cog_name]
                        except:
                            cogs.update({ c.cog_name: { 'commands': [] } })

                        if c.help == None:
                            cogs[c.cog_name]['commands'].append(c)

                        if c.help != None:
                            try:
                                cogs[c.cog_name][c.help].append(c)
                            except:
                                cogs[c.cog_name].update({ c.help: [c] })

            ct_d = {
            'bs': ['üñº', '–§–æ–Ω—ã', '–ö–æ–º–∞–Ω–¥—ã –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ –ø–æ–∫—É–ø–∫–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ñ–æ–Ω–æ–≤.'],
            'clubs': ['üè∞', '–ö–ª—É–±—ã', '–ö–æ–º–∞–Ω–¥—ã –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é / –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–ª—É–±–æ–≤.'],
            'economy': ['<:pokecoin:780356652359745537>', '–≠–∫–æ–Ω–æ–º–∏–∫–∞', '–ö–æ–º–∞–Ω–¥—ã –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ —ç–∫–æ–Ω–æ–º–∏–∫–µ. –ò–≥—Ä—ã, –º–∞–≥–∞–∑–∏–Ω, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ.'],
            'info': ['üßæ', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.'],
            'mod': ['üîë', '–ú–æ–¥–µ—Ä–∞—Ü–∏—è', '–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏.'],
            'profile': ['üé¥', '–ü—Ä–æ—Ñ–∏–ª—å', '–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º.'],
            'reactions': ['‚ò†', '–†–µ–∞–∫—Ü–∏–∏', 'RP (role play) —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è –±–æ–ª–µ–µ –∂–∏–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è!'],
            'remain': ['ü•¢', '–ö–æ–º–∞–Ω–¥—ã –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', '–ö–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω–∞—à–ª–∏ —Å–µ–±–µ –º–µ—Å—Ç–æ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö.'],
            'rpg': ['üèπ', '–†–ü–ì', '–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–≥—Ä—ã –≤ –†–ü–ì.'],
            'settings': ['üîß', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –±–æ—Ç–∞.'],
            'voice': ['üîä', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–∫–∞–º–∏', '–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –≤–æ–π—Å –∫–∞–Ω–∞–ª–∞–º–∏.'],
            }

            for c in ct_d:
                i = ct_d[c]
                emb.add_field( name = f'{i[0]} | {i[1]}', value = i[2], inline = True  )

            options = []
            options.append(discord.SelectOption(label = "–ì–ª–∞–≤–Ω–∞—è", emoji = "üç°" ))
            for cc in ct_d.keys():
                i = ct_d[cc]
                options.append(discord.SelectOption(label = i[1], emoji = i[0] ))

            def embed(c_n):
                nonlocal ct_d
                nonlocal cogs
                nonlocal ctx
                nonlocal emb

                if c_n == '–ì–ª–∞–≤–Ω–∞—è':
                    semb = emb

                else:
                    for i in ct_d:
                        c = ct_d[i]
                        if c[1] == c_n:
                            i_l = c
                            cog = cogs[i]

                    text = ''

                    for i in cog['commands']:
                        text += f'{ctx.prefix}{i} {i.usage}\n\n'

                    semb = discord.Embed(title = f'{i_l[0]} | {i_l[1]}', description = f"{i_l[2]}\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–∞–Ω–¥–µ, –ø—Ä–æ–ø–∏—à–∏—Ç–µ\n {ctx.prefix}help (command)\n\n{text}" ,color=server['embed_color'])

                    if len(cog.keys()) != 1:
                        for i in cog.keys():
                            if i != 'commands':
                                t = ''
                                for n in cog[i]:
                                    t += f'{ctx.prefix}{n} {n.usage}\n\n'
                                semb.add_field( name = f'{i}', value= f"{t}", inline = True  )

                    semb.add_field( name = f'–ò–Ω—Ñ–æ—Ä–∞—Ü–∏—è –æ–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö', value= f"–°–∫–æ–±–∫–∏ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã —É–∫–∞–∑—ã–≤–∞—Ç—å –ù–ï –ù–ê–î–û\n() - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç\n[] - –Ω–µ–æ–±–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç\n / - –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–≤—É—Ö\n<= –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ\n", inline = True  )

                return semb

            class Dropdown(discord.ui.Select):
                def __init__(self, ctx, msg, options, placeholder, min_values, max_values:int, rem_args):
                    super().__init__(placeholder=placeholder, min_values=min_values, max_values=min_values, options=options)

                async def callback(self, interaction: discord.Interaction):
                    if ctx.author.id == interaction.user.id:
                        await msg.edit(embed = embed(self.values[0]))

                    else:
                        await interaction.response.send_message(f'–ñ–º–∏ –Ω–∞ —Å–≤–æ–∏ –∫–Ω–æ–ø–∫–∏!', ephemeral = True)


            class DropdownView(discord.ui.View):
                def __init__(self, ctx, msg, options:list, placeholder:str, min_values:int = 1, max_values:int = 1, timeout: float = 120.0, rem_args:list = []):
                    super().__init__(timeout=timeout)
                    self.add_item(Dropdown(ctx, msg, options, placeholder, min_values, max_values, rem_args))

                async def on_timeout(self):
                    self.stop()
                    await msg.edit(view = None)

            msg = await ctx.send(embed = emb)
            await msg.edit(view=DropdownView(ctx, msg, options = options, placeholder = '‚ùì | –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', min_values = 1, max_values=1, timeout = 120.0, rem_args = []))


def setup(bot):
    bot.add_cog(help(bot))
