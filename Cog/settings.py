import nextcord as discord
from nextcord.ext import tasks, commands
import requests
from PIL import Image, ImageFont, ImageDraw, ImageOps, ImageSequence, ImageFilter
import io
import sys
import random
from random import choice
import asyncio
import time
from Cybernator import Paginator
import pymongo

sys.path.append("..")
from ai3 import functions as funs
import config

client = pymongo.MongoClient(config.cluster_token)
db = client.bot
users = db.users
backs = db.bs
servers = db.servers

class settings(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        global servers


    @commands.command(usage = '(lvl) (money) (items)', description = '–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —É—Ä–æ–≤–µ–Ω—å.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    async def add_up(self, ctx, lvl:int, money:int, *item:int):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        if lvl < 1:
            await ctx.send("–ù–∞–≥—Ä–∞–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è —Ä–∞–Ω—å—à–µ 1-–≥–æ —É—Ä–æ–≤–Ω—è")
            return
        if money < 1:
            await ctx.send("–ú–æ–Ω–µ—Ç—ã –∑–∞ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1-–æ–π!")
            return

        server = servers.find_one({"server": ctx.guild.id})
        a = server['upsend_sett']

        if server['premium'] != True:
            mk = 20
            if len(a['upitems'].keys()) >= 50:
                await ctx.send("–ù–µ –∏–º–µ—è –ø–æ–¥–ø–∏—Å–∫–∏ premium, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –±–æ–ª—å—à–µ 50 –Ω–∞–≥—Ä–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å! ")
                return

        if server['premium'] == True:
            mk = 50

        if server['premium'] != True:
            if len(a['upitems'].keys()) >= 100:
                await ctx.send("–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ 100 –Ω–∞–≥—Ä–∞–¥!")
                return

        items = []
        for i in item:
            try:
                server['items'][str(i)]
                items.append(i)
            except:
                pass

        if len(items) == 0:
            await ctx.send("–ù–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!")
            return
        if len(items) > mk:
            await ctx.send(f"–ù–µ–ª—å–∑—è –≤—ã–¥–∞—Ç—å –±–æ–ª—å—à–µ {mk} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ —Ä–∞–∑!!")
            return

        a['upitems'].update({ str(lvl): {'items': items, 'money': money} })
        servers.update_one( {"server": ctx.guild.id}, {"$set": {'upsend_sett': a}} )
        await ctx.send(f'–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å {lvl}, –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–∞!')

    @commands.command(usage = '(lvl)', description = '–£–¥–∞–ª–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —É—Ä–æ–≤–µ–Ω—å.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    async def delete_up(self,ctx, lvl:int):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        a = server['upsend_sett']

        try:
            del a['upitems'][str(lvl)]
        except KeyError:
            await ctx.send("–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —ç—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return

        servers.update_one( {"server": ctx.guild.id}, {"$set": {'upsend_sett': a}} )
        await ctx.send(f'–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å {lvl} –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞!')

    @commands.command(usage = '-', description = '–°–ø–∏—Å–æ–∫ –Ω–∞–≥—Ä–∞–¥ –∑–∞ —É—Ä–æ–≤–µ–Ω—å.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    async def uplist(self,ctx):
        global servers
        server = servers.find_one({'server':ctx.guild.id})

        if server['upsend_sett']['upitems'] == {}:
            await ctx.send("–¢—É—Ç –ø—É—Å—Ç–æ! üòØ")
            return

        solutions = ['‚óÄ', '‚ñ∂', '‚ùå']
        member = ctx.author
        reaction = 'a'
        numberpage = 1

        keys = []
        for i in list(server['upsend_sett']['upitems'].keys()):
            keys.append(int(i))
        keys = sorted(keys)

        if len(keys) % 6 != 0:
            l = int(len(keys) / 6 + 1)
        else:
            l = int(len(keys) / 6)

        def top_embed(numberpage):
            nonlocal ctx
            nonlocal l

            num1 = 0
            num2 = 0
            page = numberpage
            text = ''

            if numberpage != 1:
                numberpage *= 6
                numberpage -= 6

                if numberpage > 5:
                    numberpage += 1

            if len(keys) <= 6:
                emb = discord.Embed(title = '–ù–∞–≥—Ä–∞–¥—ã –∑–∞ —É—Ä–æ–≤–µ–Ω–∏', description = '',color=server['embed_color'])
                for i in keys:
                    ii = []
                    for n in server['upsend_sett']['upitems'][str(i)]['items']:
                        ii.append(server['items'][str(n)]['name'])

                    mr = server['upsend_sett']['upitems'][str(i)]['money']

                    emb.add_field(name = f"–£—Ä–æ–≤–µ–Ω—å {i}", value = f"–ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(ii)}\n–ú–æ–Ω–µ—Ç—ã: (–æ—Ç {int(mr - mr / 100 * 50)} –¥–æ {mr})")

            elif len(keys) > 6:
                emb = discord.Embed(title = '–¢–æ–ø –ª–∏–¥–µ—Ä–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é', description = '',color=server['embed_color'])
                for i in keys:
                    num1 += 1
                    if num1 >= numberpage and num2 < 5:
                        num2 += 1

                        ii = []
                        for n in server['upsend_sett']['upitems'][str(i)]['items']:
                            ii.append(server['items'][str(n)]['name'])

                        mr = server['upsend_sett']['upitems'][str(i)]['money']

                        emb.add_field(name = f"–£—Ä–æ–≤–µ–Ω—å {i}", value = f"–ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(ii)}\n–ú–æ–Ω–µ—Ç—ã: (–æ—Ç {int(mr - mr / 100 * 50)} –¥–æ {mr})")


            emb.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{l}")
            return emb

        msg = await ctx.send(embed = top_embed(numberpage))

        def check( reaction, user):
            nonlocal msg
            return user == ctx.author and str(reaction.emoji) in solutions and str(reaction.message) == str(msg)

        async def rr():
            nonlocal reaction
            nonlocal numberpage
            nonlocal l
            if str(reaction.emoji) == '‚óÄ':
                await msg.remove_reaction('‚óÄ', member)
                numberpage -= 1
                if numberpage < 1:
                    numberpage = 1

                await msg.edit(embed = top_embed(numberpage))


            elif str(reaction.emoji) == '‚ñ∂':
                await msg.remove_reaction('‚ñ∂', member)
                numberpage += 1
                if numberpage > l:
                    numberpage = l

                await msg.edit(embed = top_embed(numberpage))


            elif str(reaction.emoji) == '‚ùå':
                await msg.clear_reactions()
                return

        async def reackt():
            nonlocal reaction
            try:
                reaction, user = await self.bot.wait_for('reaction_add', timeout=30.0, check = check)
            except asyncio.TimeoutError:
                await msg.clear_reactions()
            else:
                await rr(), await reackt()

        if len(keys) > 6:
            for x in solutions:
                await msg.add_reaction(x)
            await reackt()


    @commands.command(usage = '(#channel)', description = '–ö–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    async def setupchannel(self,ctx, channel:discord.TextChannel):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['upsend_sett']
        a.update({'upsend': channel.id})
        await ctx.send(f"–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ <#{channel.id}>")
        servers.update_one( {"server": ctx.guild.id}, {"$set":{"upsend_sett": a}})

    @commands.command(usage = '-', description = '–û—Ç–∫–ª—é—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± —É—Ä–æ–≤–Ω–µ.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    async def upoff(self,ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        await ctx.send("–ö–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–∫–ª—é—á—ë–Ω")
        server = servers.find_one({'server':ctx.guild.id})
        a = server['upsend_sett']
        a.update({"upsend": True})
        servers.update_one( {"server": ctx.guild.id}, {"$set":{"upsend_sett": a}})

    @commands.command(usage = '(url) [type]', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ—ë –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    async def up_image(self, ctx, url, type = 'png'):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        try:
            emb1 = discord.Embed(title = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", color=server['embed_color'])
            emb1.set_image(url = url)
            msg = await ctx.send(embed = emb1)
        except Exception:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å __—Å—Å—ã–ª–∫—É__ –Ω–∞ –±–∞–Ω–Ω–µ—Ä, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –µ—â—ë —Ä–∞–∑.")
            return

        try:
            await msg.delete()
        except Exception:
            pass

        server = servers.find_one({'server':ctx.guild.id})
        a = server['upsend_sett']
        a.update({"up_message": message})

        if type == 'png' or type == 'gif':
            a.update({"type":type })

        elif type not in ['png', 'gif']:
            await ctx.send("–¢–∏–ø —É–∫–∞–∑–∞–Ω –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ")
            return

        await ctx.send(f'–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å—Ç–∞–ª–æ–≤–ª–µ–Ω–æ!')

        servers.update_one( {"server": ctx.guild.id}, {"$set":{"upsend_sett": a}})

    @commands.command(usage = '(message)', description = '–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    async def up_message(self, ctx, *message):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        if description == None:
            await ctx.send(funs.text_replase("text"))
            return

        if len(description) > 1000:
            await ctx.send(f'–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 1000-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤')
            return

        await ctx.send(funs.text_replase(message, ctx.author))
        await ctx.send(f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤–∞—â–µ–≥–æ –∏–º–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—ã–¥–µ—Ç –≤—ã—Å–ª–∞–Ω–æ –ø—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!')

        server = servers.find_one({'server':ctx.guild.id})
        a = server['upsend_sett']
        a.update({"up_message": message})
        servers.update_one( {"server": ctx.guild.id}, {"$set":{"upsend_sett": a}})

    @commands.command(usage = '-', description = '–£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –≤–æ–π—Å—ã.', help = '–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –≤–æ–π—Å-–∫–∞–Ω–∞–ª—ã')
    async def clearvoicechannel(self,ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        await ctx.send("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –≤–æ–π—Å-–∫–∞–Ω–∞–ª c–±—Ä–æ—à–µ–Ω—ã")
        server = servers.find_one({'server':ctx.guild.id})
        a = server['voice']
        a.update({'voice_category': None})
        a.update({'voice_channel': None})
        servers.update_one( {"server": ctx.guild.id}, {"$set": {'voice': a}} )

    @commands.command(usage = '[#voice_channel] [category_id]', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –≤–æ–π—Å—ã.', help = '–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –≤–æ–π—Å-–∫–∞–Ω–∞–ª—ã')
    async def setvoicechannel(self,ctx, voicechannel:discord.VoiceChannel = None, category:int = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        if category == None:
            cat = await ctx.guild.create_category('–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –≤–æ–π—Å—ã')
            category = cat.id
            if voicechannel == None:
                voicechannel = await ctx.guild.create_voice_channel(name=f"+", category=cat)

        c = ctx.guild.get_channel(category)
        if c == None or type(c) != discord.CategoryChannel:
            await ctx.send(f"–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –ª–∏–±–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —ç—Ç–æ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç. –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
            return

        await ctx.send(f"–ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –≤–æ–π—Å-–∫–∞–Ω–∞–ª–∞ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ <#{voicechannel.id}>")
        server = servers.find_one({'server':ctx.guild.id})
        a = server['voice']
        a.update({'voice_category': category})
        a.update({'voice_channel': voicechannel.id})
        servers.update_one( {"server": ctx.guild.id}, {"$set": {'voice': a}} )

    @commands.command(usage = '[#channel]', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –≤—Ö–æ–¥–∞.', help = '–†–∞–Ω–¥–æ–º–Ω—ã–π –≤–æ–π—Å-–∫–∞–Ω–∞–ª')
    async def set_random_channel(self,ctx, voicechannel:discord.VoiceChannel = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['voice']

        if voicechannel == None:
            voicechannel = await ctx.guild.create_voice_channel(name=f"random", category=category)

        await ctx.send(f"–ö–∞–Ω–∞–ª —Å —Ä–∞–Ω–¥–æ–º–Ω—ã–º –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–Ω–∏–µ–º –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ <#{voicechannel.id}>")

        a.update({'randomc_channel': voicechannel.id})
        servers.update_one( {"server": ctx.guild.id}, {"$set": {'voice': a}} )

    # @commands.command(usage = '[#channels]', description = '')
    # async def set_bl_random(self,ctx, *, channels:discord.VoiceChannel):
    #     global servers
    #     if funs.roles_check(ctx.author, ctx.guild.id) == False:
    #         await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
    #         return
    #
    #     server = servers.find_one({'server':ctx.guild.id})
    #     a = server['voice']
    #
    #     bl_c = []
    #     for l in channels:
    #         if l.id not in bl_c:
    #             bl_c.append(l.id)
    #
    #
    #     await ctx.send(f"–ö–∞–Ω–∞–ª —Å —Ä–∞–Ω–¥–æ–º–Ω—ã–º –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–Ω–∏–µ–º –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ <#{voicechannel.id}>")
    #
    #     a.update({'rc_bl_channels': voicechannel.id})
    #     servers.update_one( {"server": ctx.guild.id}, {"$set": {'voice': a}} )

    @commands.command(usage = '[prefix <= 4 characters]', description = '–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def it_prefix(self, ctx, arg: str = None):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})
        if arg is None:
            emb = discord.Embed(title = "| –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞", description = "", color=server['embed_color'])
            emb.add_field(name = "–ü—Ä–µ—Ñ–∏–∫—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", value = f"–ü—Ä–µ—Ñ–∏–∫—Å +")
            servers.update_one({"server": ctx.guild.id}, {"$set": {"prefix": "+"}})
            await ctx.send(embed = emb)

        elif len(str(arg)) > 4:
            emb = discord.Embed(title = "| –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞", description = "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ—Ñ–∏–∫—Å –Ω–µ –±–æ–ª—å—à–µ 4-—ë—Ö —Å–∏–º–≤–æ–ª–æ–≤", color=server['embed_color'])
            emb.add_field(name = "–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥—ã", value = f"{ctx.prefix}prefix (–≤–∞—à –ø—Ä–µ—Ñ–∏–∫—Å)")
            await ctx.send(embed = emb)

        else:
            servers.update_one({"server": ctx.guild.id}, {"$set": {"prefix": arg}})
            emb = discord.Embed(title = "| –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞", description = f"–ü—Ä–µ—Ñ–∏–∫—Å —Å–µ—Ä–≤–µ—Ä–∞ –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞: {arg}", color=server['embed_color'])
            await ctx.send(embed = emb)

    @commands.command(usage = '(#channel)', description = '–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def set_join_channel(self, ctx, channel:discord.TextChannel):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        if server['send']['joinsend'] == None or server['send']['joinsend'] == 777777777777777777:
            await ctx.send(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!")
            return
        await ctx.send(f"–ö–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –±—ã–ª —Å–º–µ–Ω—ë–Ω –Ω–∞ <#{channel.id}>")
        a = server['send']
        a.update({"joinsend": channel.id})
        servers.update_one( {"server": ctx.guild.id}, {"$set":{"send": a}} )

    @commands.command(usage = '(#channel)', description = '–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def set_leave_channel(self, ctx, channel:discord.TextChannel):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        if server['send']['leavensend'] == None or server['send']['leavensend'] == 777777777777777777:
            await ctx.send(f"–ü—Ä–æ—â–∞–Ω–∏–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!")
            return
        await ctx.send(f"–ö–∞–Ω–∞–ª –ø—Ä–æ—â–∞–Ω–∏—è –±—ã–ª —Å–º–µ–Ω—ë–Ω –Ω–∞ <#{channel.id}>")
        a = server['send']
        a.update({"leavensend": channel.id})
        servers.update_one( {"server": ctx.guild.id}, {"$set":{"send": a}} )


    @commands.command(usage = '-', description = '–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def set_join(self, ctx):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        member = ctx.author
        server = servers.find_one({"server": member.guild.id})
        user = users.find_one({"userid": member.id})
        name = member.name
        tag = member.discriminator
        reaction = 'a'

        def make_ellipse_mask(size, x0, y0, x1, y1, blur_radius):
            img = Image.new("L", size, color=0)
            draw = ImageDraw.Draw(img)
            draw.ellipse((x0, y0, x1, y1), fill=255)
            return img.filter(ImageFilter.GaussianBlur(radius=blur_radius))

        l = len(name) + len(tag) + 1


        emb = discord.Embed(title = "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ö–æ–¥–∞", description = "", color=server['embed_color'])
        emb.add_field(name = "–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏:", value = f"–£–∫–∞–∂–∏—Ç–µ [id](https://support.discord.com/hc/ru/articles/206346498-%D0%93%D0%B4%D0%B5-%D0%BC%D0%BD%D0%B5-%D0%BD%D0%B0%D0%B9%D1%82%D0%B8-ID-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F-) –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ `dm` –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        emb.set_footer(text= '–í —á–∞—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ id')
        message = await ctx.send(embed = emb)

        def embed(channel, avatar_join_url = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", f_el = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", f_we = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", f_na = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", text = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", em = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", position = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"):
            nonlocal server

            emb = discord.Embed(title = "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ö–æ–¥–∞", description = "", color=server['embed_color'])
            if channel == 'dm':
                emb.add_field(name = "–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏:", value = f"–õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
            else:
                emb.add_field(name = "–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏:", value = f"<#{channel}>")

            emb.add_field(name = "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:", value = f"{avatar_join_url}")
            emb.add_field(name = "–¶–≤–µ—Ç —Ä–∞–º–∫–∏:", value = f"{f_el}")
            emb.add_field(name = "–¶–≤–µ—Ç –Ω–∞–¥–ø–∏—Å–∏ Welcome:", value = f"{f_we}")
            emb.add_field(name = "–¶–≤–µ—Ç –∏–º–µ–Ω–∏:", value = f"{f_na}")
            emb.add_field(name = "–¢–µ–∫—Å—Ç:", value = f"{text}", inline = False)
            emb.add_field(name = "–≠–º–±–µ—Ç", value = f"{em}")
            emb.add_field(name = "–¢–∏–ø", value = f"{position}")
            emb.set_footer(text = "–£ –≤–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
            if avatar_join_url != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ":
                if avatar_join_url != "–£–∫–∞–∂–∏—Ç–µ –≤ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ":
                    emb.set_image(url = avatar_join_url)
            return emb


        try:
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            if msg.content == 'dm':
                channel = 'dm'

            if msg.content != 'dm':
                try:
                    if self.bot.get_channel(int(msg.content)) != None:
                        await message.edit(embed = embed(msg.content))
                        channel = int(msg.content)

                    else:
                        await ctx.send("–û—à–∏–±–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞")
                        return
                except Exception:
                    await ctx.send("–û—à–∏–±–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞")
                    return

        try:
            await message.edit(embed = embed(channel, "–£–∫–∞–∂–∏—Ç–µ –≤ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                img = requests.get(f"{msg.content}", stream = True)
                img = Image.open(io.BytesIO(img.content))
                img = img.convert("RGBA")
                img = img.resize((960, 470), Image.ANTIALIAS)

                idraw = ImageDraw.Draw(img)

                url = msg.content
                link = msg.content

                await message.edit(embed = embed(channel, msg.content))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É")
                return
        if server['premium'] == True:
            try:
                msg2 = await ctx.send("–£—Ç–æ—á–Ω–∏—Ç–µ —Ç–∏–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–æ–¥–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∏—Ñ–∫–æ–π, —É–∫–∞–∂–∏—Ç–µ `+`, –µ—Å–ª–∏ —Å—Ç–∞—Ç–∏—á–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–æ–π `-`\n\n–ù–µ —Å—Ç–æ–∏—Ç –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∏–ø gif")
                msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
                return
            else:
                try:
                    await msg.delete()
                    await msg2.delete()
                except Exception:
                    pass
                if msg.content == '+':
                    gif = True
                elif msg.content == '-':
                    gif = False
                else:
                    await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å + –∏–ª–∏ -")
                    return

        if server['premium'] == False:
            gif = False


        try:
            await message.edit(embed = embed(channel, link, "–£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex (#ffffff) –∏–ª–∏ `none`"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                if msg.content == "none":
                    f_el = None
                else:
                    idraw.ellipse((ap1 - 10, ap2 - 10, ap1 + size[0] + 10, ap2 + size[1] + 10), fill = f"{msg.content}")
                    f_el = msg.content

                await message.edit(embed = embed(channel, link, msg.content))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ hex")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el,"–£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex (#ffffff) –∏–ª–∏ `none`"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                if msg.content == "none":
                    f_we = None
                else:
                    idraw.text((wp1, wp2), f"W E L C O M E", font = big, fill = f"{msg.content}")
                    f_we = msg.content

                await message.edit(embed = embed(channel, link, f_el, f_we))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ hex")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, "–£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex (#ffffff) –∏–ª–∏ `none`"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                if msg.content == "none":
                    f_na = None
                else:
                    idraw.text((tp1, tp2), f"{name}#{tag}", font = headline, fill = f"{msg.content}")
                    f_na = msg.content

                await message.edit(embed = embed(channel, link, f_el, f_we, f_na))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ hex")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ö–æ–¥–∞"))
            msg2 = await ctx.send(funs.text_replase("text") + "\n–£–∫–∞–∂–∏—Ç–µ `none` –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å:\n`Goodbye {member.name.tag}`")
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
                await msg2.delete()
            except Exception:
                pass
            if msg.content == 'none':
                w_text = None
            else:
                w_text = msg.content

            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, msg.content))


        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, w_text, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–±–µ—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ?"))
            msg2 = await ctx.send("–£–∫–∞–∂–∏—Ç–µ `+` –∏–ª–∏ `-`")
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
                await msg2.delete()
            except Exception:
                pass
            if msg.content == '+':
                emb = True
            elif msg.content == '-':
                emb = False
            else:
                await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å + –∏–ª–∏ -")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, w_text, emb, "–£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (0 –∏–ª–∏ 1)\n0 - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ\n1 - —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ª–µ–≤–æ"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            if msg.content == '0':
                position = 0
            elif msg.content == '1':
                position = 1
            else:
                await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å 1 –∏–ª–∏ 0")
                return

        await message.edit(embed = embed(channel, link, f_el, f_we, f_na, w_text, emb, position))


        url = link
        user = users.find_one({"userid": ctx.author.id})

        if gif == False:

            response = requests.get(url, stream = True)
            response = Image.open(io.BytesIO(response.content))
            response = response.convert("RGBA")
            alpha = response.resize((960, 470), Image.ANTIALIAS) # —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞

        if gif == True:

            response = requests.get(url, stream=True)
            response.raw.decode_content = True
            img = Image.open(response.raw)

            alpha = Image.open('elements/alpha.png')
            alpha = alpha.resize((960, 470), Image.ANTIALIAS) # —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞


        idraw = ImageDraw.Draw(alpha)
        name = member.name
        tag = member.discriminator


        headline = ImageFont.truetype("fonts/20421.ttf", size = 50)
        big = ImageFont.truetype("fonts/NotoSans-Bold.ttf", size = 100)

        l = len(name)
        if l < 11:
            number = 11
        if l >= 11:
            number = 9

        if position == 0:

            wp1 = 245          #x
            wp2 = 275          #y

            tp2 = 400
            tp1 = int(400 - l * number) #—Ç–µ–∫—Å—Ç

            size = (250,250)        #y
            ap1 = int(960 / 2 - size[0] / 2)         #x
            ap2 = 30          #y

        if position == 1:

            wp1 = 300          #x
            wp2 = 170          #y

            tp2 = 280 #y
            tp1 = 305 #—Ç–µ–∫—Å—Ç –∏–º–µ–Ω–∏  x

            size = (250,250)
            ap1 = 20         #x
            ap2 = 115          #y

        if f_we == None:
            idraw.text((wp1, wp2), f"WELCOME", font = big)
        else:
            idraw.text((wp1, wp2), f"WELCOME", font = big, fill = f"{f_we}")

        if f_na == None:
            idraw.text((tp1, tp2), f"{name}#{tag}", font = headline)
        else:
            idraw.text((tp1, tp2), f"{name}#{tag}", font = headline,fill = f"{f_na}")

        url = str(member.avatar.url)

        try:
            response1 = requests.get(url, stream = True)
            response1 = Image.open(io.BytesIO(response1.content))

        except Exception:
            byteImgIO = io.BytesIO()
            response = requests.get(url, stream = True)
            response.raw.decode_content = True
            response1 = Image.open(response.raw)

        response1 = response1.convert("RGB")
        response1 = response1.resize((200, 200), Image.ANTIALIAS)

        def trans_paste(fg_img,bg_img,alpha=10,box=(0,0)):
            fg_img_trans = Image.new("RGBA",fg_img.size)
            fg_img_trans = Image.blend(fg_img_trans,fg_img,alpha)
            bg_img.paste(fg_img_trans,box,fg_img_trans)
            return bg_img

        def prepare_mask(size, antialias = 2):
            mask = Image.new('L', (size[0] * antialias, size[1] * antialias), 0)
            ImageDraw.Draw(mask).ellipse((0, 0) + mask.size, fill=255)
            return mask.resize(size, Image.ANTIALIAS)

        def crop(im, s):
            w, h = im.size
            k = w / s[0] - h / s[1]

            if k > 0:
                im = im.crop(((w - h) / 2, 0, (w + h) / 2, h))
            elif k < 0:
                im = im.crop((0, (h - w) / 2, w, (h + w) / 2))

            return im.resize(s, Image.ANTIALIAS)

        im = response1
        im = crop(im, size)
        im.putalpha(prepare_mask(size, 4))

        def make_ellipse_mask(size, x0, y0, x1, y1, blur_radius):
            img = Image.new("L", size, color=0)
            draw = ImageDraw.Draw(img)
            draw.ellipse((x0, y0, x1, y1), fill=255)
            return img.filter(ImageFilter.GaussianBlur(radius=blur_radius))

        overlay_image = alpha.filter(ImageFilter.GaussianBlur(radius=15))
        if f_el == None:
            mask_image = make_ellipse_mask((960, 470), ap1 - 10, ap2 - 10, ap1 + size[0] + 10, ap2 + size[1] + 10, 1)
            alpha = Image.composite(overlay_image, alpha, mask_image)
        else:
            idraw.ellipse((ap1 - 10, ap2 - 10, ap1 + size[0] + 10, ap2 + size[1] + 10), fill = f"{f_el}")

        #–∞–≤–∞—Ç–∞—Ä–∫–∞
        bg_img = alpha
        fg_img = im
        p = trans_paste(fg_img, bg_img, 1.0, (ap1, ap2, ap1 + size[0], ap2 + size[0]))

        if w_text == None:
            text = f"Welcome {name}#{tag} to {member.guild.name}"
        else:
            text = w_text
            text = funs.text_replase(text, member)

        if gif == False:


            image = alpha
            output = BytesIO()
            image.save(output, 'png')
            image_pix=BytesIO(output.getvalue())

            file = discord.File(fp = image_pix, filename="welcome_card.png")
            ul = 'png'

        if gif == True:
            fs = []
            for frame in ImageSequence.Iterator(img):
                frame = frame.convert("RGBA")

                frame = frame.resize((960, 470), Image.ANTIALIAS)

                bg_img = frame
                fg_img = alpha
                img = trans_paste(fg_img, bg_img, 1.0)

                b = io.BytesIO()
                frame.save(b, format="GIF",optimize=True, quality=75)
                frame = Image.open(b)
                fs.append(frame)


            fs[0].save('welcome_card.gif', save_all=True, append_images=fs[1:], loop = 0, optimize=True, quality=75)

            file = discord.File(fp = "welcome_card.gif", filename="welcome_card.gif")
            ul = 'gif'

        try:
            msg = await ctx.channel.send(f"{text}", file = file)
        except Exception:
            pass

        try:
            os.remove(f'welcome_card.{ul}')
        except Exception:
            pass


        solutions = ['‚úÖ', '‚ùå']

        def check( reaction, user):
            nonlocal msg
            return user == ctx.author and str(reaction.emoji) in solutions and str(reaction.message) == str(msg)

        async def rr():
            nonlocal reaction
            nonlocal channel, link, f_el, f_we, f_na, w_text, emb, position, gif

            if str(reaction.emoji) == '‚úÖ':
                try:
                    await msg.remove_reaction('‚úÖ', member), await msg.clear_reactions()
                except Exception:
                    pass

                a = server['welcome']
                a.update({"el_fill": f_el, "wel_text": w_text, "nam_fill": f_na, "wel_fill": f_we, 'emb': emb, 'join_type': gif})
                servers.update_one( {"server": member.guild.id}, {"$set":{"welcome": a }} )

                a = server['send']
                a.update({"joinsend": channel, "avatar_join_url": link, "join_position_avatar": position})
                servers.update_one( {"server": member.guild.id}, {"$set":{"send": a}} )

                await ctx.send("–í—Ö–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return

            elif str(reaction.emoji) == '‚ùå':
                await msg.clear_reactions()
                return

        async def reackt():
            nonlocal reaction
            try:
                reaction, user = await self.bot.wait_for('reaction_add', timeout=30.0, check = check)
            except asyncio.TimeoutError:
                await msg.clear_reactions()
                return
            else:
                await rr()

        for x in solutions:
            await msg.add_reaction(x)

        await reackt()

    @commands.command(usage = '-', description = '–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def join_off(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        await ctx.send(f"–ö–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –æ –≤—Ö–æ–¥–µ –±—ã–ª –æ—Ç–∫–ª—é—á—ë–Ω.")
        servers.update_one( {"server": ctx.guild.id}, {"$set":{'send':{"joinsend": None}}} )

    @commands.command(usage = '-', description = '–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def leave_off(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        await ctx.send(f"–ö–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –æ –≤—ã—Ö–æ–¥–µ –±—ã–ª –æ—Ç–∫–ª—é—á—ë–Ω.")
        servers.update_one( {"server": ctx.guild.id}, {"$set":{'send':{"leavesend": None}}} )

    @commands.command(usage = '-', description = '–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def set_leave(self, ctx):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        member = ctx.author
        server = servers.find_one({"server": member.guild.id})
        user = users.find_one({"userid": member.id})
        name = member.name
        tag = member.discriminator
        reaction = 'a'

        def make_ellipse_mask(size, x0, y0, x1, y1, blur_radius):
            img = Image.new("L", size, color=0)
            draw = ImageDraw.Draw(img)
            draw.ellipse((x0, y0, x1, y1), fill=255)
            return img.filter(ImageFilter.GaussianBlur(radius=blur_radius))

        l = len(name) + len(tag) + 1


        emb = discord.Embed(title = "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã—Ö–æ–¥–∞", description = "", color=server['embed_color'])
        emb.add_field(name = "–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏:", value = f"–£–∫–∞–∂–∏—Ç–µ [id](https://support.discord.com/hc/ru/articles/206346498-%D0%93%D0%B4%D0%B5-%D0%BC%D0%BD%D0%B5-%D0%BD%D0%B0%D0%B9%D1%82%D0%B8-ID-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F-) –∫–∞–Ω–∞–ª–∞.")
        emb.set_footer(text= '–í —á–∞—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ id')
        message = await ctx.send(embed = emb)

        def embed(channel, avatar_join_url = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", f_el = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", f_we = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", f_na = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", text = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", em = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", position = "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"):
            nonlocal server

            emb = discord.Embed(title = "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã—Ö–æ–¥–∞", description = "", color=server['embed_color'])

            emb.add_field(name = "–ö–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏:", value = f"<#{channel}>")

            emb.add_field(name = "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:", value = f"{avatar_join_url}")
            emb.add_field(name = "–¶–≤–µ—Ç —Ä–∞–º–∫–∏:", value = f"{f_el}")
            emb.add_field(name = "–¶–≤–µ—Ç –Ω–∞–¥–ø–∏—Å–∏ Goodbye:", value = f"{f_we}")
            emb.add_field(name = "–¶–≤–µ—Ç –∏–º–µ–Ω–∏:", value = f"{f_na}")
            emb.add_field(name = "–¢–µ–∫—Å—Ç:", value = f"{text}", inline = False)
            emb.add_field(name = "–≠–º–±–µ—Ç", value = f"{em}")
            emb.add_field(name = "–¢–∏–ø", value = f"{position}")
            emb.set_footer(text = "–£ –≤–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
            if avatar_join_url != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ":
                if avatar_join_url != "–£–∫–∞–∂–∏—Ç–µ –≤ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ":
                    emb.set_image(url = avatar_join_url)
            return emb


        try:
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass

            try:
                if self.bot.get_channel(int(msg.content)) != None:
                    await message.edit(embed = embed(msg.content))
                    channel = int(msg.content)

                else:
                    await ctx.send("–û—à–∏–±–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞")
                    return
            except Exception:
                await ctx.send("–û—à–∏–±–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞")
                return

        try:
            await message.edit(embed = embed(channel, "–£–∫–∞–∂–∏—Ç–µ –≤ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                img = requests.get(f"{msg.content}", stream = True)
                img = Image.open(io.BytesIO(img.content))
                img = img.convert("RGBA")
                img = img.resize((960, 470), Image.ANTIALIAS)

                idraw = ImageDraw.Draw(img)

                url = msg.content
                link = msg.content

                await message.edit(embed = embed(channel, msg.content))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É")
                return
        if server['premium'] == True:
            try:
                msg2 = await ctx.send("–£—Ç–æ—á–Ω–∏—Ç–µ —Ç–∏–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–æ–¥–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∏—Ñ–∫–æ–π, —É–∫–∞–∂–∏—Ç–µ `+`, –µ—Å–ª–∏ —Å—Ç–∞—Ç–∏—á–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–æ–π `-`\n\n–ù–µ —Å—Ç–æ–∏—Ç –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∏–ø gif")
                msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
                return
            else:
                try:
                    await msg.delete()
                    await msg2.delete()
                except Exception:
                    pass
                if msg.content == '+':
                    gif = True
                elif msg.content == '-':
                    gif = False
                else:
                    await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å + –∏–ª–∏ -")
                    return

        if server['premium'] == False:
            gif = False


        try:
            await message.edit(embed = embed(channel, link, "–£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex (#ffffff) –∏–ª–∏ `none`"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                if msg.content == "none":
                    f_el = None
                else:
                    idraw.ellipse((ap1 - 10, ap2 - 10, ap1 + size[0] + 10, ap2 + size[1] + 10), fill = f"{msg.content}")
                    f_el = msg.content

                await message.edit(embed = embed(channel, link, msg.content))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ hex")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el,"–£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex (#ffffff) –∏–ª–∏ `none`"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                if msg.content == "none":
                    f_we = None
                else:
                    idraw.text((wp1, wp2), f"W E L C O M E", font = big, fill = f"{msg.content}")
                    f_we = msg.content

                await message.edit(embed = embed(channel, link, f_el, f_we))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ hex")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, "–£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex (#ffffff) –∏–ª–∏ `none`"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            try:
                if msg.content == "none":
                    f_na = None
                else:
                    idraw.text((tp1, tp2), f"{name}#{tag}", font = headline, fill = f"{msg.content}")
                    f_na = msg.content

                await message.edit(embed = embed(channel, link, f_el, f_we, f_na))

            except Exception:
                await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∞ hex")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ö–æ–¥–∞"))
            msg2 = await ctx.send(funs.text_replase("text") + "\n–£–∫–∞–∂–∏—Ç–µ `none` –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å:\n`Welcome {member.name.tag} to {guild.name}`")
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
                await msg2.delete()
            except Exception:
                pass
            if msg.content == 'none':
                w_text = None
            else:
                w_text = msg.content

            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, msg.content))


        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, w_text, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–±–µ—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ?"))
            msg2 = await ctx.send("–£–∫–∞–∂–∏—Ç–µ `+` –∏–ª–∏ `-`")
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
                await msg2.delete()
            except Exception:
                pass
            if msg.content == '+':
                emb = True
            elif msg.content == '-':
                emb = False
            else:
                await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å + –∏–ª–∏ -")
                return

        try:
            await message.edit(embed = embed(channel, link, f_el, f_we, f_na, w_text, emb, "–£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (0 –∏–ª–∏ 1)\n0 - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ\n1 - —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ª–µ–≤–æ"))
            msg = await self.bot.wait_for('message', timeout=120.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                await msg.delete()
            except Exception:
                pass
            if msg.content == '0':
                position = 0
            elif msg.content == '1':
                position = 1
            else:
                await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å 1 –∏–ª–∏ 0")
                return

        await message.edit(embed = embed(channel, link, f_el, f_we, f_na, w_text, emb, position))


        url = link
        user = users.find_one({"userid": ctx.author.id})

        if gif == False:

            response = requests.get(url, stream = True)
            response = Image.open(io.BytesIO(response.content))
            response = response.convert("RGBA")
            alpha = response.resize((960, 470), Image.ANTIALIAS) # —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞

        if gif == True:

            response = requests.get(url, stream=True)
            response.raw.decode_content = True
            img = Image.open(response.raw)

            alpha = Image.open('elements/alpha.png')
            alpha = alpha.resize((960, 470), Image.ANTIALIAS) # —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞


        idraw = ImageDraw.Draw(alpha)
        name = member.name
        tag = member.discriminator


        headline = ImageFont.truetype("fonts/20421.ttf", size = 50)
        big = ImageFont.truetype("fonts/NotoSans-Bold.ttf", size = 100)

        l = len(name)
        if l < 11:
            number = 11
        if l >= 11:
            number = 9

        if position == 0:

            wp1 = 245          #x
            wp2 = 275          #y

            tp2 = 400
            tp1 = int(400 - l * number) #—Ç–µ–∫—Å—Ç

            size = (250,250)        #y
            ap1 = int(960 / 2 - size[0] / 2)         #x
            ap2 = 30          #y

        if position == 1:

            wp1 = 300          #x
            wp2 = 170          #y

            tp2 = 280 #y
            tp1 = 305 #—Ç–µ–∫—Å—Ç –∏–º–µ–Ω–∏  x

            size = (250,250)
            ap1 = 20         #x
            ap2 = 115          #y

        if f_we == None:
            idraw.text((wp1, wp2), f"Goodbye", font = big)
        else:
            idraw.text((wp1, wp2), f"Goodbye", font = big, fill = f"{f_we}")

        if f_na == None:
            idraw.text((tp1, tp2), f"{name}#{tag}", font = headline)
        else:
            idraw.text((tp1, tp2), f"{name}#{tag}", font = headline,fill = f"{f_na}")

        url = str(member.avatar.url)

        try:
            response1 = requests.get(url, stream = True)
            response1 = Image.open(io.BytesIO(response1.content))

        except Exception:
            byteImgIO = io.BytesIO()
            response = requests.get(url, stream = True)
            response.raw.decode_content = True
            response1 = Image.open(response.raw)

        response1 = response1.convert("RGB")
        response1 = response1.resize((200, 200), Image.ANTIALIAS)

        def trans_paste(fg_img,bg_img,alpha=10,box=(0,0)):
            fg_img_trans = Image.new("RGBA",fg_img.size)
            fg_img_trans = Image.blend(fg_img_trans,fg_img,alpha)
            bg_img.paste(fg_img_trans,box,fg_img_trans)
            return bg_img

        def prepare_mask(size, antialias = 2):
            mask = Image.new('L', (size[0] * antialias, size[1] * antialias), 0)
            ImageDraw.Draw(mask).ellipse((0, 0) + mask.size, fill=255)
            return mask.resize(size, Image.ANTIALIAS)

        def crop(im, s):
            w, h = im.size
            k = w / s[0] - h / s[1]

            if k > 0:
                im = im.crop(((w - h) / 2, 0, (w + h) / 2, h))
            elif k < 0:
                im = im.crop((0, (h - w) / 2, w, (h + w) / 2))

            return im.resize(s, Image.ANTIALIAS)

        im = response1
        im = crop(im, size)
        im.putalpha(prepare_mask(size, 4))

        def make_ellipse_mask(size, x0, y0, x1, y1, blur_radius):
            img = Image.new("L", size, color=0)
            draw = ImageDraw.Draw(img)
            draw.ellipse((x0, y0, x1, y1), fill=255)
            return img.filter(ImageFilter.GaussianBlur(radius=blur_radius))

        overlay_image = alpha.filter(ImageFilter.GaussianBlur(radius=15))
        if f_el == None:
            mask_image = make_ellipse_mask((960, 470), ap1 - 10, ap2 - 10, ap1 + size[0] + 10, ap2 + size[1] + 10, 1)
            alpha = Image.composite(overlay_image, alpha, mask_image)
        else:
            idraw.ellipse((ap1 - 10, ap2 - 10, ap1 + size[0] + 10, ap2 + size[1] + 10), fill = f"{f_el}")

        #–∞–≤–∞—Ç–∞—Ä–∫–∞
        bg_img = alpha
        fg_img = im
        p = trans_paste(fg_img, bg_img, 1.0, (ap1, ap2, ap1 + size[0], ap2 + size[0]))

        if w_text == None:
            text = f"Goodbye {name}#{tag}"
        else:
            text = w_text
            text = funs.text_replase(text, member)

        if gif == False:


            image = alpha
            output = BytesIO()
            image.save(output, 'png')
            image_pix=BytesIO(output.getvalue())

            file = discord.File(fp = image_pix, filename="goodbye_card.png")
            ul = 'png'

        if gif == True:
            fs = []
            for frame in ImageSequence.Iterator(img):
                frame = frame.convert("RGBA")

                frame = frame.resize((960, 470), Image.ANTIALIAS)

                bg_img = frame
                fg_img = alpha
                img = trans_paste(fg_img, bg_img, 1.0)

                b = io.BytesIO()
                frame.save(b, format="GIF",optimize=True, quality=75)
                frame = Image.open(b)
                fs.append(frame)


            fs[0].save('goodbye_card.gif', save_all=True, append_images=fs[1:], loop = 0, optimize=True, quality=75)

            file = discord.File(fp = "goodbye_card.gif", filename="goodbye_card.gif")
            ul = 'gif'

        try:
            msg = await ctx.channel.send(f"{text}", file = file)
        except Exception:
            pass

        try:
            os.remove(f'goodbye_card.{ul}')
        except Exception:
            pass


        solutions = ['‚úÖ', '‚ùå']

        def check( reaction, user):
            nonlocal msg
            return user == ctx.author and str(reaction.emoji) in solutions and str(reaction.message) == str(msg)

        async def rr():
            nonlocal reaction
            nonlocal channel, link, f_el, f_we, f_na, w_text, emb, position, gif

            if str(reaction.emoji) == '‚úÖ':
                try:
                    await msg.remove_reaction('‚úÖ', member), await msg.clear_reactions()
                except Exception:
                    pass

                a = server['goodbye']
                a.update({"el_fill_l": f_el, "lea_text": w_text, "nam_fill_l": f_na, "wel_fill_l": f_we, 'emb': emb, 'leave_type': gif})
                servers.update_one( {"server": member.guild.id}, {"$set":{"goodbye": a }} )

                a = server['send']
                a.update({"leavensend": channel, "avatar_leave_url": link, "leave_position_avatar": position})
                servers.update_one( {"server": member.guild.id}, {"$set":{"send": a}} )

                await ctx.send("–í—ã—Ö–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return

            elif str(reaction.emoji) == '‚ùå':
                await msg.clear_reactions()
                return

        async def reackt():
            nonlocal reaction
            try:
                reaction, user = await self.bot.wait_for('reaction_add', timeout=30.0, check = check)
            except asyncio.TimeoutError:
                await msg.clear_reactions()
                return
            else:
                await rr()

        for x in solutions:
            await msg.add_reaction(x)

        await reackt()

    @commands.command(usage = '(@role)', description = '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ–ª–∏ –∑–∞ –º—å—é—Ç.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def setmuterole(self, ctx, role:discord.Role):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        await ctx.send(f"–†–æ–ª—å –º—å—é—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ({role.name})\n–ë–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª—ã –Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∞–≤, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–æ–π —Ä–æ–ª—å—é")
        a = server['mod']
        a.update({'muterole': role.id})
        servers.update_one( {"server": ctx.guild.id}, {"$set": {'mod': a}} )

    @commands.command(usage = '-', description = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è –∑–∞ –≤–∞—Ä–Ω.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def set_punishment(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        try:
            await ctx.send('–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—Ä–Ω–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ.\n–í —á–∞—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')
            msg = await self.bot.wait_for('message', timeout=60.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                warnid = int(msg.content)
                if warnid == 0:
                    await ctx.send('–£–∫–∞–∂–∏—Ç–µ —á–∏c–ª–æ –±–æ–ª—å—à–µ 0-–ª—è. –û—à–∏–±–∫–∞...')
                    return
                if warnid > 20:
                    await ctx.send('–£–∫–∞–∂–∏—Ç–µ —á–∏c–ª–æ –º–µ–Ω—å—à–µ 21. –û—à–∏–±–∫–∞...')
                    return
            except Exception:
                await ctx.send('–£–∫–∞–∂–∏—Ç–µ __—á–∏—Å–ª–æ__. –û—à–∏–±–∫–∞...')
                return
        try:
            await ctx.send(f'–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ –≤–∞—Ä–Ω #{warnid}\n–í —á–∞—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—â–µ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—é.\n0 - –Ω–∏—á–µ–≥–æ\n1 - –º—å—é—Ç\n2 - –∫–∏–∫\n3 - –±–∞–Ω\n4 - –≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏\n5 - —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\n6 - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è')
            msg = await self.bot.wait_for('message', timeout=60.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
            return
        else:
            try:
                punishment = int(msg.content)
            except Exception:
                await ctx.send('–£–∫–∞–∂–∏—Ç–µ __—á–∏—Å–ª–æ__. –û—à–∏–±–∫–∞...')
                return

        if punishment == 0:
            await ctx.send(f"–í–∞—Ä–Ω {warnid} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –Ω–∏—á–µ–≥–æ. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É –≤—Å–µ—Ö –≤–∞—Ä–Ω–æ–≤ —Å—Ç–æ–∏—Ç –Ω–∏—á–µ–≥–æ. ")
            return

        elif punishment == 1:
            punishments_warns = server['mod']['punishments_warns']
            try:
                await ctx.send(f'–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –º—å—é—Ç–∞ –∑–∞ –≤–∞—Ä–Ω #{warnid}\n–í —á–∞—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è, –§–æ—Ä–º–∞—Ç: 10m `(s/m/h/d)`')
                msg = await self.bot.wait_for('message', timeout=60.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
                return
            else:
                try:
                    punishment = int(msg.content[:-1])
                except Exception:
                    await ctx.send('–£–∫–∞–∂–∏—Ç–µ __—á–∏—Å–ª–æ__. –û—à–∏–±–∫–∞...')
                    return


                if msg.content.endswith("s"):
                    tim = int(msg.content[:-1])

                elif msg.content.endswith("m"):
                    tim = int(msg.content[:-1])*60

                elif msg.content.endswith("h"):
                    tim = int(msg.content[:-1])*3600

                elif msg.content.endswith("d"):
                    tim = int(msg.content[:-1])*86400

                else:
                    await ctx.send('–û—à–∏–±–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏.')
                    return


            punishments_warns.update({str(warnid): {'punishment': 1, "time": tim} })
            a = server['mod']
            a.update({'punishments_warns': punishments_warns})
            servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})
            await ctx.send(f"–í–∞—Ä–Ω {warnid} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –º—å—é—Ç. –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞—Ä–Ω–∞, —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª—É—á–∏—Ç –º—å—é—Ç –Ω–∞ `{msg.content}`")

        elif punishment == 2:
            punishments_warns = server['mod']['punishments_warns']
            punishments_warns.update({str(warnid): {'punishment': 2} })
            a = server['mod']
            a.update({'punishments_warns': punishments_warns})
            servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})
            await ctx.send(f"–í–∞—Ä–Ω {warnid} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∫–∏–∫.")

        elif punishment == 3:
            punishments_warns = server['mod']['punishments_warns']
            punishments_warns.update({str(warnid): {'punishment': 3} })
            a = server['mod']
            a.update({'punishments_warns': punishments_warns})
            servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})
            await ctx.send(f"–í–∞—Ä–Ω {warnid} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –±–∞–Ω.")

        elif punishment == 4:
            punishments_warns = server['mod']['punishments_warns']
            try:
                await ctx.send(f'–£–∫–∞–∂–∏—Ç–µ id —Ä–æ–ª–∏ –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è –∑–∞ –≤–∞—Ä–Ω #{warnid}')
                msg = await self.bot.wait_for('message', timeout=60.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
                return
            else:
                try:
                    idrole = int(msg.content)
                except Exception:
                    await ctx.send('–£–∫–∞–∂–∏—Ç–µ __id__. –û—à–∏–±–∫–∞...')
                    return

            punishments_warns.update({str(warnid): {'punishment': 4, 'role': idrole} })
            a = server['mod']
            a.update({'punishments_warns': punishments_warns})
            servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})
            await ctx.send(f"–í–∞—Ä–Ω {warnid} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.")

        elif punishment == 5:
            punishments_warns = server['mod']['punishments_warns']
            try:
                await ctx.send(f'–£–∫–∞–∂–∏—Ç–µ id —Ä–æ–ª–∏ –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å—Å—è –∑–∞ –≤–∞—Ä–Ω #{warnid}')
                msg = await self.bot.wait_for('message', timeout=60.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
                return
            else:
                try:
                    idrole = int(msg.content)
                except Exception:
                    await ctx.send('–£–∫–∞–∂–∏—Ç–µ __id__. –û—à–∏–±–∫–∞...')
                    return

            punishments_warns.update({str(warnid): {'punishment': 5, 'role': idrole} })
            a = server['mod']
            a.update({'punishments_warns': punishments_warns})
            servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})
            await ctx.send(f"–í–∞—Ä–Ω {warnid} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏.")

        elif punishment == 6:
            punishments_warns = server['mod']['punishments_warns']
            try:
                await ctx.send(f'–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏–º–æ–µ –∑–∞ –≤–∞—Ä–Ω #{warnid}')
                msg = await self.bot.wait_for('message', timeout=60.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
                return
            else:
                message = msg.content
                if len(message) > 1500:
                    await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–æ–π –±–æ–ª–µ–µ 1.5–∫ —Å–∏–º–≤–æ–ª–æ–≤!')
                    return

            punishments_warns.update({str(warnid): {'punishment': 6, 'message': message} })
            a = server['mod']
            a.update({'punishments_warns': punishments_warns})
            servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})
            await ctx.send(f"–í–∞—Ä–Ω {warnid} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è.")

    @commands.command(usage = '[page]', description = '–°–ø–∏—Å–æ–∫ –Ω–∞–∫–∞–∑–∞–Ω–∏–π –∑–∞ –≤–∞—Ä–Ω—ã.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def punishment_list(self, ctx, numberpage:int = 1):
        server = servers.find_one({'server':ctx.guild.id})
        if server['mod']['punishments_warns'] == {}:
            text = '–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç'
        else:
            d = server['mod']['punishments_warns']
            list_keys = list(sorted(d.keys(),key=int, reverse=False))

            num1 = 0
            num2 = 0
            text = ''
            page = 1

            if len(d) % 10 != 0:
                l = int(len(d) / 10 + 1)
            else:
                l = int(len(d) / 10)

            if numberpage > l :
                await ctx.send("–¢–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ—Ç!")
                return

            if numberpage != 1:
                page = numberpage
                numberpage *= 10
                numberpage -= 10

                if numberpage > 9:
                    numberpage += 1


            if len(server['mod']['punishments_warns']) <= 10:
                text = ''
                for i in list_keys:
                    num1 += 1
                    if d[i]['punishment'] == 1:
                        text += f"#{i} –º—å—é—Ç –Ω–∞ {funs.time_end(d[i]['time'])}\n"
                    if d[i]['punishment'] == 2:
                        text += f"#{i} –∫–∏–∫\n"
                    if d[i]['punishment'] == 3:
                        text += f"#{i} –±–∞–Ω\n"
                    if d[i]['punishment'] == 4:
                        text += f"#{i} –≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏ <@&{d[i]['role']}>\n"
                    if d[i]['punishment'] == 5:
                        text += f"#{i} —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ <@&{d[i]['role']}>\n"
                    if d[i]['punishment'] == 5:
                        text += f"#{i} —Å–æ–æ–±—â–µ–Ω–∏–µ: {d[i]['message']}\n"
                    if d[i]['punishment'] == 0:
                        text += f"#{i} –Ω–∏—á–µ–≥–æ\n"

            elif len(server['mod']['punishments_warns']) > 10:
                for i in list_keys:

                    num1 += 1

                    if num1 >= numberpage and num2 < 10:
                        num2 += 1

                        if d[i]['punishment'] == 1:
                            text += f"#{i} –º—å—é—Ç –Ω–∞ {funs.time_end(d[i]['time'])}\n"
                        if d[i]['punishment'] == 2:
                            text += f"#{i} –∫–∏–∫\n"
                        if d[i]['punishment'] == 3:
                            text += f"#{i} –±–∞–Ω\n"
                        if d[i]['punishment'] == 4:
                            text += f"#{i} –≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏ <@&{d[i]['role']}>\n"
                        if d[i]['punishment'] == 5:
                            text += f"#{i} —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ <@&{d[i]['role']}>\n"
                        if d[i]['punishment'] == 5:
                            text += f"#{i} —Å–æ–æ–±—â–µ–Ω–∏–µ: {d[i]['message']}\n"
                        if d[i]['punishment'] == 0:
                            text += f"#{i} –Ω–∏—á–µ–≥–æ\n"

            emb = discord.Embed(title = '–ù–∞–∫–∞–∑–∞–Ω–∏—è', description = text, color=server['embed_color'])
            emb.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{l}")
            await ctx.send(embed = emb)


    @commands.command(usage = '[code]', description = '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–∂—Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —á–∞—Ç–∞.', help = '–ú–µ–∂—Å–µ—Ä–≤–µ—Ä')
    async def set_globalchannel(self,ctx, code:int = 0):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        webhook = await ctx.channel.create_webhook(name="–ú–µ–∂—Å–µ—Ä–≤–µ—Ä–Ω—ã–π —á–∞—Ç")
        if code != 0:
            servers.update_one({'server':ctx.guild.id},{'$set':{'globalchat':{'channel':ctx.channel.id,'webhook':webhook.id}} })
            servers.update_one({'server':ctx.guild.id},{'$set': {'global_code': code } })
        else:
            servers.update_one({'server':ctx.guild.id},{'$set':{'globalchat':{'channel':ctx.channel.id,'webhook':webhook.id}}})
        await ctx.send(f'–ú–µ–∂—Å–µ—Ä–≤–µ—Ä–Ω—ã–π —á–∞—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ "{ctx.guild.name}"')

    @commands.command(usage = '-', description = '–£–¥–∞–ª–∏—Ç—å –º–µ–∂—Å–µ—Ä–≤–µ—Ä–Ω—ã–π —á–∞—Ç.', help = '–ú–µ–∂—Å–µ—Ä–≤–µ—Ä')
    async def delete_globalchannel(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        channel = self.bot.get_channel(server['globalchat']['channel'])
        webhook = discord.utils.get(await channel.webhooks(), id=server['globalchat']['webhook'])
        await webhook.delete()

        servers.update_one({'server':ctx.guild.id},{'$set':{'globalchat':{'channel':None,'webhook':None}}})
        try:
            servers.update_one({'server':ctx.guild.id},{'$set': {'global_code': None } })
        except:
            pass
        await ctx.send(f'–ú–µ–∂—Å–µ—Ä–≤–µ—Ä–Ω—ã–π —á–∞—Ç —É–¥–∞–ª—ë–Ω')

    @commands.command(usage = '-', description = '–°–ø–∏—Å–æ–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def bchannels(self, ctx):
        global servers
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['black_channels']
        text = ''
        for i in a:
            c = self.bot.get_channel(i)
            text = text + f', {c.mention}'
        message = await ctx.send(embed = discord.Embed(title="–ß–° –∫–∞–Ω–∞–ª–æ–≤",description=text, color=server['embed_color']))

    @commands.command(usage = '(#channel)', description = '–î–æ–±–∞–≤–∏—Ç—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–π –∫–∞–Ω–∞–ª.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def bchannels_add(self, ctx, channel:discord.TextChannel):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['black_channels']
        a.append(channel.id)

        b = server['mod']
        b.update({'black_channels': a})
        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': b }})
        await ctx.send(f'–ö–∞–Ω–∞–ª {channel.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—Å –±–æ—Ç–∞.')

    @commands.command(usage = '(#channel)', description = '–£–¥–∞–ª–∏—Ç—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–π –∫–∞–Ω–∞–ª.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def bchannels_delete(self, ctx, channel:discord.TextChannel):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['black_channels'].copy()
        try:
            a.remove(channel.id)
        except Exception:
            await ctx.send('–ö–∞–Ω–∞–ª –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—Å.')
            return

        b = server['mod']
        b.update({'black_channels': a})
        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': b }})
        await ctx.send(f'–ö–∞–Ω–∞–ª {channel.mention} —É–¥–∞–ª—ë–Ω –∏–∑ —á—Å –±–æ—Ç–∞.')

    @commands.command(usage = '-', description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª—è—Ö –ø–æ —Ä–µ–∞–∫—Ü–∏–∏.', help = '–†–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º')
    async def rr(self, ctx):
        server = servers.find_one({"server": ctx.guild.id})
        hh = '[id —Å–æ–æ–±—â–µ–Ω–∏—è](https://support.discord.com/hc/ru/articles/206346498-%D0%93%D0%B4%D0%B5-%D0%BC%D0%BD%D0%B5-%D0%BD%D0%B0%D0%B9%D1%82%D0%B8-ID-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F-)'
        if ctx.invoked_subcommand is None:

            emb = discord.Embed(title = '–§–æ—Ä–º–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è', description = f'`{ctx.prefix}rr_set (message-id) (emoji) (function) (roles)`\n(message-id) - —É–∫–∞–∂–∏—Ç–µ {hh}\n(emoji) - :unicorn: (–ª—é–±–æ–π —ç–º–æ–¥–∂–∏)\n(function) - —Ñ—É–Ω–∫—Ü–∏—è (add/remove/verify/limit)\n(roles) - —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª @—É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏ –∏–ª–∏ id —Ä–æ–ª–∏', color=server['embed_color'])

            emb.add_field(name = '–§–æ—Ä–º–∞—Ç –æ—á–∏—Å—Ç–∫–∏', value = f'`{ctx.prefix}rr_clear (message-id)`\n(message-id) - —É–∫–∞–∂–∏—Ç–µ {hh}')

            emb.add_field(name = '–§–æ—Ä–º–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è', value = f'`{ctx.prefix}rr_remove (message-id) (emoji)`\n(message-id) - —É–∫–∞–∂–∏—Ç–µ {hh}\n(emoji) - :unicorn: (–ª—é–±–æ–π —ç–º–æ–¥–∂–∏)')

            emb.add_field(name = '–§–æ—Ä–º–∞—Ç –Ω–∞—Å—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–∫—Ü–∏–∏', value = f'`{ctx.prefix}rr set_roles (message-id) (roles)`\n(message-id) - —É–∫–∞–∂–∏—Ç–µ {hh}\n(roles) - —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª @—É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª–∏', inline = False)
            await ctx.send(embed = emb)

    @commands.command(usage = '(message_id) (:emoji:) (function) (@roles)', description = '–£–¥–∞–ª–∏—Ç—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–π –∫–∞–Ω–∞–ª.', help = '–†–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º')
    async def rr_set(self, ctx, message_id:int, emoji:str, function:str, *, roles):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        try:
            message = await ctx.channel.fetch_message(message_id)
        except Exception:
            await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            return

        try:
            if len(emoji) != 1:
                l = len(emoji) - 19
                em = int(emoji[l:-1])
            else:
                em = emoji
        except Exception:
            await ctx.send('–≠–º–æ–¥–∂–∏ —É–∫–∞–∑–∞–Ω –Ω–µ –≤–µ—Ä–Ω–æ!')
            return


        ls = [] #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–ª–∏
        roles = roles.split()
        for i in roles:
            i = i.replace('<', '')
            i = i.replace('@', '')
            i = i.replace('>', '')
            i = i.replace('&', '')
            r = ctx.guild.get_role(int(i))
            if r == None:
                await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ @—Ä–æ–ª—å, –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ `{ctx.prefix}rr`")
                return

            ls.append(int(i))


        if function not in ['add', 'remove', 'verif', 'limit']:
            await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ `{ctx.prefix}rr`")
            return

        if function == 'limit':
            try:
                help_message = await ctx.send(f"–í–≤–µ–¥–∏—Ç–µ –≤ —á–∞—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ remove/add –∏ —á–∏—Å–ª–æ –ª–∏–º–∏—Ç–∞\n–ü—Ä–∏–º–µ—Ä: add 100 / remove 12")
                msg = await self.bot.wait_for('message', timeout=60.0, check=lambda message: message.author == ctx.author and message.channel.id == ctx.channel.id)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ.")
                return
            else:
                try:
                    await msg.delete()
                    await help_message.delete()
                except Exception:
                    pass
                msg = msg.content.split()
                if msg[0] not in ['add', 'remove']:
                    await ctx.send(f"–í–≤–µ–¥–∏—Ç–µ –≤ —á–∞—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ remove/add.")
                    return
                try:
                    msg[1] = int(msg[1])
                except Exception:
                    await ctx.send(f"–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ –≤—Ç–æ—Ä—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º __—á–∏—Å–ª–æ__!")
                    return

                server = servers.find_one({"server": ctx.guild.id})

                rrs = server['rr'].copy()

                try:
                    list = rrs[str(message_id)]['emojis']
                    list.append([em, ls, msg[1], [] ])
                    rrs.update({str(message_id): {'emojis': list, 'func': function, 'limit_func': msg[0] }})
                except Exception:
                    rrs.update({str(message_id): {'emojis': [[em, ls, msg[1], [] ]], 'func': function, 'limit_func': msg[0] }})

                await message.add_reaction(emoji)
                servers.update_one({'server':ctx.guild.id},{'$set': {'rr':rrs}})
                await ctx.send("–†–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!")

        else:
            await message.add_reaction(emoji)
            server = servers.find_one({"server": ctx.guild.id})

            rrs = server['rr'].copy()

            try:
                list = rrs[str(message_id)]['emojis']
                list.append([em, ls])
                rrs.update({str(message_id): {'emojis': list, 'func': function }})
            except Exception:
                rrs.update({str(message_id): {'emojis': [[em, ls]], 'func': function }})

            await ctx.send("–†–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!")
            servers.update_one({'server':ctx.guild.id},{'$set': {'rr':rrs}})

    @commands.command(usage = '(message_id)', description = '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è.', help = '–†–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º')
    async def rr_clear(self, ctx, message_id:int):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        try:
            m = server['rr'][str(message_id)] #–ø—Ä–∏ –Ω–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É
            try:
                message = await ctx.channel.fetch_message(message_id) #–ø—Ä–∏ –Ω–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É
            except Exception:
                r = server['rr'].copy()
                r.pop(str(message_id), None)
                servers.update_one({'server':ctx.guild.id},{'$set': {'rr':r}})
                await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
                return
        except Exception:
            await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            return


        rr = server['rr'].copy()
        rr.pop(str(message_id), None)
        servers.update_one({'server':ctx.guild.id},{'$set': {'rr':rr}})
        await ctx.send('–í—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω—ã')

    @commands.command(usage = '(message_id) (:emoji:)', description = '–£–¥–∞–ª–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é.', help = '–†–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º')
    async def rr_remove(self, ctx, message_id:int, emoji:str):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({"server": ctx.guild.id})

        try:
            m = server['rr'][str(message_id)] #–ø—Ä–∏ –Ω–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É
            try:
                message = await ctx.channel.fetch_message(message_id) #–ø—Ä–∏ –Ω–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É
            except Exception:
                r = server['rr'].copy()
                r.pop(str(message_id), None)
                servers.update_one({'server':ctx.guild.id},{'$set': {'rr':r}})
                await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
                return
        except Exception:
            await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            return

        if len(emoji) != 1:
            l = len(emoji) - 19
            em = int(emoji[l:-1])
        else:
            em = emoji

        r = server['rr'].copy()
        ch = 0
        for i in server['rr'][str(message_id)]['emojis']:
            if em in i:
                r[str(message_id)]['emojis'].remove(i)
                servers.update_one({'server':ctx.guild.id},{'$set': {'rr':r}})
                ch += 1

        rs = server['rr'].copy()
        if rs[str(message_id)]['emojis'] == []:
            rs.pop(str(message_id), None)
            servers.update_one({'server':ctx.guild.id},{'$set': {'rr':rs}})

        if ch == 0:
            await ctx.send('–†–µ–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
            return
        else:
            await ctx.send(f'–†–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞!')

    @commands.command(usage = '-', description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º.', help = '–†–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º')
    async def rr_info(self, ctx):
        server = servers.find_one({"server": ctx.guild.id})
        if server['rr'] == {}:
            await ctx.send('–ü—É—Å—Ç–æ')
            return

        text = ''
        roles = []

        for i in server['rr']:
            for a in server['rr'][str(i)]['emojis']:
                for role in a[1]:
                    r = ctx.guild.get_role(role)
                    roles.append(r.mention)

                if len(str(a[0])) != 1:
                    e = self.bot.get_emoji(a[0])
                else:
                    e = a[0]
                roles =  ' '.join(roles)
                f = server['rr'][str(i)]['func']
                try:
                    aroles = []
                    for role in server['rr'][str(i)]['allow roles']:
                        r = ctx.guild.get_role(role)
                        aroles.append(r.mention)
                    aroles = ' '.join(aroles)
                    text = text + f'`{i}`: {e} - {f} {roles}, only for: {aroles} \n'
                except Exception:
                    text = text + f'`{i}`: {e} - {f} {roles}\n'
                roles = []


        emb = discord.Embed(title = '–†–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º', description = text, color=server['embed_color'])
        await ctx.send(embed = emb)

    @commands.command(usage = '(message_id) (@roles)', description = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π.', help = '–†–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º')
    async def rr_set_roles(self, ctx, message_id:int, *, roles):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({"server": ctx.guild.id})

        try:
            m = server['rr'][str(message_id)] #–ø—Ä–∏ –Ω–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É
            try:
                message = await ctx.channel.fetch_message(message_id) #–ø—Ä–∏ –Ω–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É
            except Exception:
                r = server['rr'].copy()
                r.pop(str(message_id), None)
                servers.update_one({'server':ctx.guild.id},{'$set': {'rr':r}})
                await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
                return
        except Exception:
            await ctx.send('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            return

        ls = [] #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–ª–∏
        roles = roles.split()
        for i in roles:
            i = i.replace('<', '')
            i = i.replace('@', '')
            i = i.replace('>', '')
            i = i.replace('&', '')
            r = ctx.guild.get_role(int(i))
            if r == None:
                await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ @—Ä–æ–ª—å, –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ `{ctx.prefix}rr`")
                return

            ls.append(int(i))

        r = server['rr'].copy()
        r[str(message_id)].update({'allow roles': ls})
        servers.update_one({'server':ctx.guild.id},{'$set': {'rr':r}})
        emb = discord.Embed(title = '–î–æ—Å—Ç—É–ø –¥–ª—è —Ä–æ–ª–µ–π –¥–æ–±–∞–≤–ª–µ–Ω',color=server['embed_color'])
        await ctx.send(embed = emb)

    @commands.command(usage = '(#channel)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –±—É—Å—Ç–µ.', help = '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –±—É—Å—Ç–µ')
    async def boost_channel(self, ctx, channel:discord.TextChannel):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['boost'].copy()
        a.update({"send": channel.id})

        servers.update_one({'server':ctx.guild.id},{'$set':{'boost': a}})
        await ctx.send(f'–ö–∞–Ω–∞–ª {channel.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –±—É—Å—Ç–∞—Ö.')

    @commands.command(usage = '[description]', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ –±—É—Å—Ç–µ.', help = '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –±—É—Å—Ç–µ')
    async def boost_description(self, ctx, *, description:str = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        if description == None:
            await ctx.send(funs.text_replase("text"))
            return
        if len(description) > 1500:
            await ctx.send(f'–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 1.5–∫ —Å–∏–º–≤–æ–ª–æ–≤')
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['boost']
        a.update({'description': description})

        servers.update_one({'server':ctx.guild.id},{'$set':{'boost': a}})
        await ctx.send(funs.text_replase(description, ctx.author))
        await ctx.send('–¢–µ–∫—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ç–µ–∫—Å—Ç —É–∫–∞–∑–∞–Ω –∫–∞–∫ –±—ã –æ–Ω –±—ã–ª –ø—Ä–∏ –±—É—Å—Ç–µ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç)')

    @commands.command(usage = '(url)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –±—É—Å—Ç–µ.', help = '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –±—É—Å—Ç–µ')
    async def boost_url(self, ctx, url):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({"server": ctx.guild.id})
        try:
            emb = discord.Embed(description = '–í—ã –ø–æ–º–µ–Ω—è–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!', color=server['embed_color'])
            emb.set_image(url = url)
        except Exception:
            await ctx.send(f'–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫–∞.')
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['boost'].copy()
        a.update({"url": url})

        servers.update_one({'server':ctx.guild.id},{'$set':{'boost': a}})
        await ctx.send(embed = emb)

    @commands.command(usage = '(description)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–≤–∞–ª –ø—Ä–∏ –±—É—Å—Ç–µ.', help = '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –±—É—Å—Ç–µ')
    async def boost_footer(self, ctx, *, description = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        if description == None:
            await ctx.send(funs.text_replase("text"))
            return
        if len(description) > 1500:
            await ctx.send(f'–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 1.5–∫ —Å–∏–º–≤–æ–ª–æ–≤')
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['boost']
        a.update({'description': description})

        servers.update_one({'server':ctx.guild.id},{'$set':{'boost': a}})
        text = funs.text_replase(description, ctx.author)
        emb = discord.Embed(description = '–í—ã –ø–æ–º–µ–Ω—è–ª–∏ –ø–æ–¥–≤–∞–ª —Å–æ–æ–±—â–µ–Ω–∏—è!', color=server['embed_color'])
        emb.set_footer(text = text)
        await ctx.send(embed = emb)

    @commands.command(usage = '-', description = '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±—É—Å—Ç–µ.', help = '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –±—É—Å—Ç–µ')
    async def boost_test(self, ctx):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        booster = ctx.author
        server = servers.find_one({"server": ctx.guild.id})
        if server["boost"]["send"] == None:
            await ctx.send("–ë—É—Å—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.")
            return

        if server['boost']['description'] != None:
            text = funs.text_replase(server['boost']['description'], booster)
        else:
            text = funs.text_replase("–û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ {member.mention}, —á—Ç–æ –ø–æ–º–æ–≥ —Å–µ—Ä–≤–µ—Ä—É!", booster)

        emb = discord.Embed(title = '–ë—É—Å—Ç–∏—Ç —Å–µ—Ä–≤–µ—Ä!', description =f"{text}", color=server['embed_color'])
        emb.set_author(icon_url = 'https://images-ext-1.discordapp.net/external/t8PQC99J_sKLcmwB6EVhtlmiIq8iG47SHE_gDJcQeOU/https/i.imgur.com/GdS5i6t.gif', name = booster)
        emb.set_thumbnail(url= ctx.author.avatar.url)
        if server["boost"]["url"] != None:
            emb.set_image(url = server["boost"]["url"])
        if server["boost"]["footer"] != None:
            emb.set_footer(text = funs.text_replase(server['boost']['footer'], booster))

        await ctx.send(embed = emb)

    @commands.command(usage = '-', description = '–°–±—Ä–æ—Å–∏—Ç—å –±—É—Å—Ç.', help = '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –±—É—Å—Ç–µ')
    async def boost_reset(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['boost'].copy()
        a.update({"send": None})

        servers.update_one({'server':ctx.guild.id},{'$set':{'boost': a}})
        await ctx.send("–ö–∞—Å—Ç–æ–º–Ω—ã–π –±—É—Å—Ç –æ—Ç–∫–ª—é—á—ë–Ω.")

    @commands.command(usage = '(currency)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–æ–∫ —ç–∫–æ–Ω–æ–º–∏–∫–∏.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏')
    async def set_currency(self, ctx, arg:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        if len(arg) > 50:
            await ctx.send("–ó–Ω–∞—á–æ–∫ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 50-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['economy'].copy()
        a.update({"currency": arg})

        servers.update_one({'server':ctx.guild.id},{'$set':{'economy': a}})
        await ctx.send(f"–ó–Ω–∞—á–æ–∫ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {arg}.")

    @commands.command(usage = '(commands)', description = '–û—Ç–∫–ª—é—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É.', help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏')
    async def disable(self, ctx, *arg:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['off_commands']
        for i in arg:
            c = self.bot.get_command(i)
            if c == None:
                await ctx.send(f'–ö–æ–º–∞–Ω–¥—ã {i} –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ!')
                return
            elif c.name in ['disable', 'enable']:
                await ctx.send(f'–ö–æ–º–∞–Ω–¥—É –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å!')
                return
            elif c.name in a:
                await ctx.send(f'–ö–æ–º–∞–Ω–¥–∞ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞!')
                return
            a.append(c.name)

        await ctx.send('–ö–æ–º–∞–Ω–¥–∞(—ã) –±—ã–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ.')
        a = server['mod']
        a.update({'off_commands': a})
        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})

    @commands.command(usage = '(commands)', description = '–í–∫–ª—é—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É.', help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏')
    async def enable(self, ctx, *arg:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['off_commands']
        for i in arg:
            c = self.bot.get_command(i)
            if c == None:
                await ctx.send(f'–ö–æ–º–∞–Ω–¥—ã {i} –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ!')
                return
            if c.name not in server['off_commands']:
                await ctx.send(f'–ö–æ–º–∞–Ω–¥–∞ `{c.name}` –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞!')
                return
            a.remove(c.name)
        await ctx.send('–ö–æ–º–∞–Ω–¥–∞(—ã) –±—ã–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ.')
        a = server['mod']
        a.update({'off_commands': a})
        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})

    @commands.command(aliases = ['disabled'], usage = '-', description = '–°–ø–∏—Å–æ–∫ –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.', help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏')
    async def disabled_commands(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['off_commands']
        text = ''
        for i in a:
            text += f"`{i}`, "
        emb = discord.Embed(title = f'–û—Ç–∫–ª—é—á—ë–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã',description = text,color=server['embed_color'])
        await ctx.send(embed = emb)

    @commands.command(usage = '(roles)', description = '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é —Ä–æ–ª—å.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def add_admin_roles(self, ctx, *role:discord.Role):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['admin_roles']
        for i in role:
            a.append(i.id)
        await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–æ–ª—å—é(–º–∏) —Ç–µ–ø–µ—Ä—å –º–æ–≥—É—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –±–æ—Ç–∞ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π!')
        a = server['mod']
        a.update({'admin_roles': a})
        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})

    @commands.command(usage = '(roles)', description = '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é —Ä–æ–ª—å.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def remove_admin_roles(self, ctx, *role:discord.Role):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['admin_roles']
        for i in role:
            if i.id not in server['mod']['admin_roles']:
                await ctx.send(f'–†–æ–ª—å `{i}` –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞!')
                return
            else:
                a.remove(i.id)
        await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é(–º–∏) —Ç–ø–µ—Ä—å –Ω–µ –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π!')
        a = server['mod']
        a.update({'admin_roles': a})
        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': a }})

    @commands.command(usage = '-', description = '–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω —Ä–æ–ª–µ–π.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def admins_roles(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['admin_roles']
        text = ''
        for i in a:
            text += f"<@&{i}>, "
        emb = discord.Embed(title = f'–†–æ–ª–∏ —Å –¥–æ—Å—Ç—É–ø–æ–º',description = text,color=server['embed_color'])
        await ctx.send(embed = emb)

    @commands.command(usage = '-', description = '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–¥–º–∏–Ω —Ä–æ–ª–∏.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    @commands.has_permissions( administrator = True)
    async def check_admins_roles(self, ctx):
        global servers
        server = servers.find_one({'server':ctx.guild.id})
        a = server['mod']['admin_roles']
        n = 0
        for i in a:
            role = ctx.guild.get_role(i)
            if role == None:
                a.remove(i)
                n += 1

        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': {'admin_roles': a}}})
        emb = discord.Embed(title = f'–ü—Ä–æ–≤–µ—Ä–∫–∞',description = f"–£–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Ä–æ–ª–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã, —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏ –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã! `({n})`",color=server['embed_color'])
        await ctx.send(embed = emb)

    @commands.command(usage = '-', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–º–±–µ—Ç –¥–ª—è –≤—Ö–æ–¥–∞.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def set_welcom_emb(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        if server['welcome']['emb_st'] == False:
            server['welcome'].update({'emb_st': True})
            text = "–†–µ–∂–∏–º embed –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

        elif server['welcome']['emb_st'] == True:
            server['welcome'].update({'emb_st': False})
            text = "–†–µ–∂–∏–º embed –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

        servers.update_one({'server':ctx.guild.id},{'$set':{'welcome': server['welcome']}})
        emb = discord.Embed(description = text,color=server['embed_color'])
        await ctx.send(embed = emb)

    @commands.command(usage = '-', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–º–±–µ—Ç –¥–ª—è –≤—ã—Ö–æ–¥–∞.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def set_goodbye_emb(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})
        if server['goodbye']['emb_st'] == False:
            server['goodbye'].update({'emb_st': True})
            text = "–†–µ–∂–∏–º embed –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

        elif server['goodbye']['emb_st'] == True:
            server['goodbye'].update({'emb_st': False})
            text = "–†–µ–∂–∏–º embed –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"

        servers.update_one({'server':ctx.guild.id},{'$set':{'goodbye': server['goodbye']}})
        emb = discord.Embed(description = text,color=server['embed_color'])
        await ctx.send(embed = emb)

    @commands.command(usage = '(#channel) (emojis)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —ç–º–æ–¥–∂–∏.', help = '–≠–º–æ–¥–∂–∏-–∫–∞–Ω–∞–ª')
    async def set_emoji_channel(self, ctx, channel:discord.TextChannel, *emojis):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        test_msg = await ctx.send("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n –ù–µ —É–¥–∞–ª—è–π—Ç–µ –µ–≥–æ, –æ–Ω–æ –±—ã–¥—É—Ç —É–¥–∞–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø—Ä–∞–≤ —É –±–æ—Ç–∞")
        list = []

        try:
            for x in emojis:
                await test_msg.add_reaction(x)
                list.append(x)

        except Exception:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å emoji —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")
            return

        server = servers.find_one({'server':ctx.guild.id})

        try:
            await test_msg.delete()
        except Exception:
            return

        if len(list) > 2 and server['premium'] == False:
                await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏, –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ 2 —ç–º–æ–¥–∂–∏!")
                return

        if len(list) > 20:
            await ctx.send("–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ 20-—Ç–∏ —Ä–µ–∞–∫—Ü–∏–π –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['emoji']
        a.update({'emoji_channel': channel.id,'emojis': list})
        servers.update_one({'server':ctx.guild.id},{'$set': {'emoji': a }})

    @commands.command(usage = '(url) (met) (color) (time_zone) (gps)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–Ω–Ω–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞.', help = '–ö–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–Ω–Ω–µ—Ä')
    async def set_banner(self, ctx, url:str, met:str, color:str, time_zone:int, gps:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})

        try:
            pr = server['premium']
        except Exception:
            pr = False

        if pr == False:
            blist = ['time', 'stat', 'stat-nb']
        else:
            blist = ['time', 'top-lvl', 'stat', 'voice-stat', 'common', 'stat-nb', 'voice-stat-nb']

        if ctx.guild.premium_subscription_count < 15:
            await ctx.send("–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—É—Å—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞!")
            return

        try:
            emb1 = discord.Embed(title = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", color=server['embed_color'])
            emb1.set_image(url = url)
            msg = await ctx.send(embed = emb1)
        except Exception:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å __—Å—Å—ã–ª–∫—É__ –Ω–∞ –±–∞–Ω–Ω–µ—Ä, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –µ—â—ë —Ä–∞–∑.")
            return

        await msg.delete()


        if met in blist:
            met_d = True
        else:
            met_d = False

        if met_d != True:
            await ctx.send(f"–í–∞—Ä–∏–∞–Ω—Ç –±–∞–Ω–Ω–µ—Ä–∞ —É–∫–∞–∑–∞–Ω –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –≤—ã —É–∫–∞–∑–∞–ª–∏ —Ç–∏–ø –±–∞–Ω–Ω–µ—Ä–∞ –∏ –∏–º–µ–µ—Ç—Å—è –ª–∏ —É –≤–∞—Å –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞!")
            return

        if color not in ['gard','mini', 'blue-sky']:
            await ctx.send("–í–∞—Ä–∏–∞–Ω—Ç —Ü–≤–µ—Ç–∞ –±–∞–Ω–Ω–µ—Ä–∞ —É–∫–∞–∑–∞–Ω –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞: gard, mini, blue-sky")
            return

        if gps not in ['center', 'center-top', 'center-bottom', 'lower-left-corner', 'upper-left-corner', 'bottom-right-corner', 'upper-right-corner']:
            await ctx.send(f"–í–∞—Ä–∏–∞–Ω—Ç –ø–æ–ª–æ–∂–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è: center, center-top, center-bottom, lower-left-corner, upper-left-corner, bottom-right-corner, upper-right-corner\n–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Ö –Ω–∞–ø–∏—Å–∞–≤ {ctx.prefix}gps_banner")
            return

        if time_zone < -12 or time_zone > 14:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É –æ—Ç -12 –¥–æ 14")
            return

        servers.update_one({'server':ctx.guild.id},{'$set':
        {'banner': {'url': url,
                    'met': met,
                    'color': color,
                    'time': time_zone,
                    'gps': gps
        }}})
        servers.update_one({'server':ctx.guild.id},{'$set':{'banner_status': True}})

        await ctx.send("–ë–∞–Ω–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Å–º–µ–Ω–∞ –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 1 —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É, –ø—Ä–∏ —Å–º–µ–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–∞–º–æ–º –¥–∏—Å–∫—Ä–¥ —Å–µ—Ä–≤–µ—Ä–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–∞–π–¥—ë—Ç, –∏–∑–º–µ–Ω—è–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±–æ—Ç–µ –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ —Å–º–µ–Ω—É –±–∞–Ω–Ω–µ—Ä–∞!")


    @commands.command(usage = '-', description = '–£–¥–∞–ª–∏—Ç—å –±–∞–Ω–Ω–µ—Ä.', help = '–ö–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–Ω–Ω–µ—Ä')
    async def remove_banner(self, ctx):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        servers.update_one({'server':ctx.guild.id},{'$set':{'banner_status': False}})
        await ctx.send('–ë–∞–Ω–Ω–µ—Ä –±—ã–ª —É–¥–∞–ª—ë–Ω.')

    @commands.command(usage = '-', description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Å—Ç–æ–º–Ω–æ–º –±–∞–Ω–Ω–µ—Ä–µ.', help = '–ö–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–Ω–Ω–µ—Ä')
    async def info_banner(self, ctx):
        server = servers.find_one({"server": ctx.guild.id})

        emb = discord.Embed(title = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Å—Ç–æ–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–∞—Ö",
        color=server['embed_color'])
        emb.add_field(name = f'{ctx.prefix}set_banner (url) (time/top-lvl/stat/voice-stat/common) (gard/mini/blue-sky) (time zone) (gps)', value = f'–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞.\n**(url)** - —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É **__960—Ö540__** –ø–∏–∫—Å–µ–ª–µ–π\n**(time/top-lvl/stat/voice-stat/common/stat-nb/voice-stat-nb)** - –î–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ –±–µ–∑ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã: time, stat\n–î–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–π –¥–æ—Å—Ç—É–ø–Ω—ã: time, top-lvl, stat, voice-stat, common, stat-nb, voice-stat-nb\n**(gard/mini/blue-sky)** - —É–∫–∞–∂–∏—Ç–µ —Ü–≤–µ—Ç –±–∞–Ω–Ω–µ—Ä–∞, gard - –≥–∞—Ä–¥–∏–µ–Ω—Ç —Ü–≤–µ—Ç–æ–≤, mini - –º–∏–Ω–∏–º–∞–ª–∏–∑–º, –±–µ–ª—ã–π —Ü–≤–µ—Ç, blue-sky - —Ü–≤–µ—Ç –≤–µ—á–µ—Ä–Ω–µ–≥–æ –Ω–µ–±–∞\n**(time zone)** - —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç -12 –¥–æ 14\n (gps) - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –±–∞–Ω–Ω–µ—Ä–µ (center/center-top/ center-bottom/lower-left-corner/upper-left-corner/bottom-right-corner/upper-right-corner) **(–¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã–∑–æ–≤–∏—Ç–µ {ctx.prefix}gps_banner)**')
        emb.add_field(name = f'{ctx.prefix}remove_banner', value = '–£–¥–∞–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞. –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–∏—Ç —Å–º–µ–Ω—É –±–∞–Ω–Ω–µ—Ä–∞.', inline = False)
        emb.set_image(url = 'https://ic.wampi.ru/2021/08/18/imagec24053e9b5c795eb.png')
        await ctx.send(embed = emb)

    @commands.command(usage = '-', description = '–ü–æ–ª–æ–µ–Ω–∏–µ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –±–∞–Ω–Ω–µ—Ä–µ.', help = '–ö–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–Ω–Ω–µ—Ä')
    async def gps_banner(self, ctx):
        server = servers.find_one({"server": ctx.guild.id})
        emb = discord.Embed(title = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª–æ–∂–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –±–∞–Ω–Ω–µ—Ä–µ",
        color=server['embed_color'])
        emb.set_image(url = 'https://ic.wampi.ru/2021/07/10/gps8b1b0b4cebf8616d.png')
        await ctx.send(embed = emb)

    @commands.command(usage = '(command) (type) (time)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã.', help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏')
    async def add_cooldown(self, ctx, command:str, type:str, time:int):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        com = self.bot.get_command(command)
        if com == None:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞.")
            return

        if com.name == 'reset_cooldown' or com.name == 'remove_cooldown' or com.name == 'daily':
            await ctx.send("–î–ª—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É.")
            return

        if type not in ['users', 'server', 'roles']:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø: `users`, `server`, `roles`\n`users` - –∑–∞–¥–µ—Ä–∂–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ.\n`server` - –∑–∞–¥–µ—Ä–∂–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Å—Ä–∞–∑—É.\n`roles` - –∑–∞–¥–µ—Ä–∂–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–æ–ª–µ–π.")
            return

        if time < 0 or time > 2592001:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏ –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ 2592001 (30 –¥–Ω–µ–π, 1 —Å–µ–∫—É–Ω–¥–∞).")
            return

        if type == 'users':
            com_cool = {
            'type': type,
            'time': time,
            'users': {},
            }
        elif type == 'server':
            com_cool = {
            'type': type,
            'time': time,
            'server_c': 0,
            }
        elif type == 'roles':
            com_cool = {
            'type': type,
            'time': time,
            'role_c': 0,
            }

        server = servers.find_one({'server':ctx.guild.id})
        server['mod']['cooldowns'].update({command : com_cool})

        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': server['mod'] }})
        await ctx.send(f"–ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã `{command}` –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {funs.time_end(time)}")

    @commands.command(usage = '(command)', description = '–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã.', help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏')
    async def remove_cooldown(self, ctx, command:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        com = self.bot.get_command(command)
        if com == None:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞.")
            return

        try:
            server['mod']['cooldowns'].pop(com.name)
        except Exception:
            await ctx.send("–î–ª—è –∫–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞.")
            return

        servers.update_one({'server':ctx.guild.id},{'$set': {'mod': server['mod'] }})
        await ctx.send(f"–ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã {com.name} –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.")


    @commands.command(usage = '(command) (@member) [met]', description = '–°–±—Ä–æ—Å–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏')
    async def reset_cooldown(self, ctx, command:str, member: discord.Member, met:str = 'one'):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        com = self.bot.get_command(command)
        if com == None:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞.")
            return

        if met not in ['all', 'one']:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å all/one \nall - –æ–±–Ω—É–ª–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞–¥–µ—Ä–∂–∫—É\none - –æ–±–Ω—É–ª–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–¥–µ—Ä–∂–∫—É\n**–¢—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑—ã–≤–∞—Ç—å –µ—Å–ª–∏ —É –∫–æ–º–º–∞–Ω–¥—ã –∑–∞–¥–µ—Ä–∂–∫–∞ —Ç–∏–ø–∞ `users`**")
            return

        if met == 'one':
            if funs.cooldown_check(member, ctx.guild, command, 'reset') == True:
                await ctx.send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—ã–ª–∞ –æ–±–Ω—É–ª–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É.")
            else:
                await ctx.send("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∑–∞–¥–µ—Ä–∂–∫–∏.")
        else:
            if funs.cooldown_check(member, ctx.guild, command, 'reset', True) == True:
                await ctx.send("–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±—ã–ª–∞ –æ–±–Ω—É–ª–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")

    @commands.command(usage = '(met1) (met2)', description = '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã—à–µ–¥—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def save_change(self, ctx, arg1, arg2:bool):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        if arg1 not in ['name', 'roles', 'date']:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å `name`/`roles`/`date`\nname - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∏–∫–µ–Ω–µ–π–º–∞/–∏–º–µ–Ω–∏\nroles - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\ndate - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—è —Ä–æ–ª–∏ –∏ –∏–º—è ")
            return

        if arg2 not in [True, False]:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å True/False\n`True` - –≤–∫–ª—é—á–∏—Ç—å\n`False` - –≤—ã–∫–ª—é—á–∏—Ç—å")
            return

        server = servers.find_one({'server':ctx.guild.id})
        server['save'].update({arg1 + "_save" : arg2})
        servers.update_one({'server':ctx.guild.id},{'$set':{'save': server['save'] }})
        await ctx.send(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {arg1}: `{arg2}`")

    @commands.command(usage = '-', description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ä–∞–Ω–µ–Ω–∏–∏.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def save_info(self, ctx):

        server = servers.find_one({'server':ctx.guild.id})
        emb = discord.Embed(title = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö",
        color=server['embed_color'], description = f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `{server['save']['name_save']}`\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `{server['save']['roles_save']}`\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏ —Ä–æ–ª–µ–π): `{server['save']['date_save']}`")

        await ctx.send(embed = emb)

    @commands.command(usage = '(@roles)', description = '–†–æ–ª–∏ –∑–∞ –≤—Ö–æ–¥.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def join_roles(self, ctx, *role:discord.Role):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        a = []
        for i in role:
            a.append(i.id)
        await ctx.send('–†–æ–ª–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!')
        servers.update_one({'server':ctx.guild.id},{'$set':{'join_roles': a}})

    @commands.command(usage = '-', description = '–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–æ–ª—å –∑–∏ –≤—Ö–æ–¥.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def join_roles_off(self, ctx):
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        await ctx.send('–†–æ–ª–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—ã–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã.')
        servers.update_one({'server':ctx.guild.id},{'$set':{'join_roles': [] }})

    @commands.command(usage = '[new_name]', description = '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –¥–ª—è –≤–æ—à–µ–¥—à—Ç—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ö–æ–¥ | –≤—ã—Ö–æ–¥')
    async def nick_change(self, ctx, *, description:str = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        if description == None:
            await ctx.send(funs.text_replase("text"))
            return

        if len(description) > 20:
            await ctx.send(f'–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 20-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤')
            return

        server = servers.find_one({'server':ctx.guild.id})

        servers.update_one({'server':ctx.guild.id},{'$set':{'nick_change': description}})
        await ctx.send(funs.text_replase(description, ctx.author))
        await ctx.send('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ (—Ç–µ–∫—Å—Ç —É–∫–∞–∑–∞–Ω –∫–∞–∫ –±—ã —ç—Ç–æ –≤—ã–≥–ª—è–¥–µ–ª–æ –∑–∞–π–¥—è –≤—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä)')

    @commands.command(usage = '-', description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—â–∏—Ç–µ –æ—Ç —Ñ–ª—É–¥–∞.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def flud_info(self, ctx):
        server = servers.find_one({"server": ctx.guild.id})
        emb = discord.Embed(title = f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞—â–∏—Ç—ã –æ—Ç —Ñ–ª—É–¥–∞', description = f'`{ctx.prefix}set_flud (repetitions) (punishment)`', color=server['embed_color'] )
        emb.add_field(name = 'repetitions (int)', value = f'–£–∫–∞–∂–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ\n–ü—Ä–∏–º–µ—Ä: 3')
        emb.add_field(name = 'punishment (*str)', value = f'–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ - ( ban, kick, warn, role-add, role-remove, message, delete-all, delete, role-add, role-remove )\n–ü—Ä–∏–º–µ—Ä: warn message delete-all')
        await ctx.send(embed = emb)

    @commands.command(usage = '(repetions) (punishments)', description = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Ñ–ª—É–¥–∞.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def set_flud(self, ctx, repetitions:int, *punishment:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        pun = []
        for i in punishment:
            if i in ["ban", "kick", "warn", "message", "delete-all", "delete", "role-add", "role-remove"]:
                pun.append(i)
        if pun != []:
            server = servers.find_one({'server':ctx.guild.id})
            server['mod']['flud_shield'].update({
            'repetitions': repetitions,
            'punishment': pun,
             })

            if 'message' in pun:
                await ctx.send(f'–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É {ctx.prefix}set_flud_message\n –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è')
                server['mod']['flud_shield'].update({'message': None, 'mess-type': None})

            if 'role-add' in pun or "role-remove" in pun:
                await ctx.send(f'–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É {ctx.prefix}set_flud_role\n –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏')
                server['mod']['flud_shield'].update({'add-role': None, 'roleremove': None})

            servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
            await ctx.send(f'–ê–Ω—Ç–∏-—Ñ–ª—É–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        else:
            await ctx.send(f'–ù–µ—Ç—É –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏')

    @commands.command(usage = '(type) (message)', description = '–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Ñ–ª—É–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def set_flud_message(self, ctx, type = None, *message):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        if type == None:
            await ctx.send(f"{ctx.prefix}set_flud_message (type) (message)\ntype - —É–∫–∞–∂–∏—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ emb –∏–ª–∏ mes\nmessge - –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏ –¥–ª–∏–Ω–Ω–æ–π –º–∞–∫—Å–∏–º—É–º 1500 —Å–∏–º–≤–æ–ª–æ–≤\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}set_flud_message emb –¢—ã –ø–ª–æ—Ö–æ–π —á–µ–ª–æ–≤–µ–∫")
        else:
            if type not in ['emb', 'mes']:
                await ctx.send('–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å emb –∏–ª–∏ mes')
                return
            if len(str(message)) > 1500:
                await ctx.send(f'–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–π –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π 1500 —Å–∏–º–≤–æ–ª–æ–≤ (–°–µ–π—á–∞—Å {len(str(message))})')
                return

            server['mod']['flud_shield'].update({'mess-type': type, 'message': message})
            servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
            await ctx.send("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")

    @commands.command(usage = '(type) (@role)', description = '–†–æ–ª—å –ø—Ä–∏ —Ñ–ª—É–¥–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def set_flud_role(self, ctx, type = None, role: discord.Role = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        if type == None:
            await ctx.send(f"{ctx.prefix}set_flud_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}set_flud_role add @—Ñ–ª—É–¥–µ—Ä")
        if role != None:
            if type == 'add':
                server['mod']['flud_shield'].update({'add-role': role.id})
                servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
            if type == 'remove':
                server['mod']['flud_shield'].update({'remove-role': role.id})
                servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})

            else:
                await ctx.send(f"{ctx.prefix}set_flud_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}set_flud_role add @—Ñ–ª—É–¥–µ—Ä")
                return

            await ctx.send('–†–æ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')

        else:
            await ctx.send(f"{ctx.prefix}set_flud_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}set_flud_role add @—Ñ–ª—É–¥–µ—Ä")

    @commands.command(usage = '-', description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—â–∏—Ç–µ –æ—Ç –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤\—Å–æ–æ–±—â–µ–Ω–∏–π', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def bad_words_info(self, ctx):
        server = servers.find_one({"server": ctx.guild.id})
        emb = discord.Embed(title = f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤', description = f'`{ctx.prefix}add_bad_words (*words)`', color=server['embed_color'] )
        emb.add_field(name = 'words (*str)', value = f'–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞\n–ü—Ä–∏–º–µ—Ä: –¥—É—Ä–∞–∫ —Ç—É–ø–æ–π')
        emb.add_field(name = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è', value = f'`{ctx.prefix}bad_words_pun (*punishment)`', inline = False)
        emb.add_field(name = 'punishment (*str)', value = f'–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ - ( ban, kick, warn, role-add, role-remove, message, delete-all, delete, role-add, role-remove )\n–ü—Ä–∏–º–µ—Ä: warn message delete-all')
        await ctx.send(embed = emb)

    @commands.command(usage = '(words)', description = '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def add_bad_words(self, ctx, *words:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        w = []
        for i in words:
            w.append(i)

        server = servers.find_one({'server':ctx.guild.id})
        server['mod']['bad_words'].update({'words': w})
        servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})

        await ctx.send("–ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫!")

    @commands.command(usage = '(punishments)', description = '–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def bad_words_pun(self, ctx, *punishment:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        pun = []
        for i in punishment:
            if i in ["ban", "kick", "warn", "message", "delete-all", "delete", "role-add", "role-remove"]:
                pun.append(i)
        if pun != []:
            server = servers.find_one({'server':ctx.guild.id})
            server['mod']['bad_words'].update({'repetitions': repetitions, 'punishment': pun,})
            servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server["mod"] }})

            if 'message' in pun:
                await ctx.send(f'–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É {ctx.prefix}bad_words_message\n –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è')
                server['mod']['bad_words'].update({'message': None, 'mess-type': None})

            if 'role-add' in pun or "role-remove" in pun:
                await ctx.send(f'–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É {ctx.prefix}bad_words_role\n –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏')
                server['mod']['bad_words'].update({'add-role': None, 'roleremove': None})

            await ctx.send(f'–ù–∞–∫–∞–∑–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
        else:
            await ctx.send(f'–ù–µ—Ç—É –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏')

    @commands.command(usage = '(type) (message)', description = '–î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞ –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def bad_words_message(self, ctx, type = None, *message):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        if type == None:
            await ctx.send(f"{ctx.prefix}bad_words_message (type) (message)\ntype - —É–∫–∞–∂–∏—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ emb –∏–ª–∏ mes\nmessge - –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏ –¥–ª–∏–Ω–Ω–æ–π –º–∞–∫—Å–∏–º—É–º 1500 —Å–∏–º–≤–æ–ª–æ–≤\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_message emb –¢—ã –ø–ª–æ—Ö–æ–π —á–µ–ª–æ–≤–µ–∫")
        else:
            if type not in ['emb', 'mes']:
                await ctx.send('–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å emb –∏–ª–∏ mes')
                return
            if len(str(message)) > 1500:
                await ctx.send(f'–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–π –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π 1500 —Å–∏–º–≤–æ–ª–æ–≤ (–°–µ–π—á–∞—Å {len(str(message))})')
                return

            server['mod']['bad_words'].update({'mess-type': type, 'message': message})
            servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
            await ctx.send("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")

    @commands.command(usage = '(type) (@role)', description = '–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –∑–∞ –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def bad_words_role(self, ctx, type = None, role: discord.Role = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        if type == None:
            await ctx.send(f"{ctx.prefix}bad_words_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_role add @–ø—Ä–æ–∫–∞–∑–Ω–∏–∫")
        if role != None:
            if type == 'add':
                server['mod']['bad_words'].update({'add-role': role.id})
                servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
            if type == 'remove':
                server['mod']['bad_words'].update({'remove-role': role.id})
                servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})

            else:
                await ctx.send(f"{ctx.prefix}bad_words_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_role add @–ø—Ä–æ–∫–∞–∑–Ω–∏–∫")
                return

            await ctx.send('–†–æ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')

        else:
            await ctx.send(f"{ctx.prefix}bad_words_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_role add @–ø—Ä–æ–∫–∞–∑–Ω–∏–∫")

    @commands.command(usage = '(@roles)', description = '–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def add_wlist_roles(self, ctx, *role: discord.Role):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        wl = server['mod']['wlist_roles']
        for i in role:
            if i.id not in wl:
                wl.append(i.id)

        server['mod'].update({'wlist_roles': wl})
        servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
        await ctx.send("–†–æ–ª–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏—è, –¥–æ–±–∞–≤–ª–µ–Ω—ã")

    @commands.command(usage = '(@members)', description = '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def add_wlist_members(self, ctx, *mem: discord.Role):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        wl = server['mod']['wlist_members']
        for i in mem:
            if i.id not in wl:
                wl.append(i.id)

        server['mod'].update({'wlist_members': wl})
        servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
        await ctx.send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏—è, –¥–æ–±–∞–≤–ª–µ–Ω—ã")

    @commands.command(usage = '-', description = '–°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def wlist_roles(self, ctx):
        server = servers.find_one({'server':ctx.guild.id})
        if server['mod']['wlist_roles'] == []:
            text = '–ü—É—Å—Ç–æ'
        else:
            text = ''
            for i in server['mod']['wlist_roles']:
                r = ctx.guild.get_role(i)
                text += f"{r.mention} "

        emb = discord.Embed(title = f'–†–æ–ª–∏ —Å –∏–º–º—É–Ω–∏—Ç–µ—Ç–æ–º –∫ –∞–≤—Ç–æ-–º–æ–¥—É', description = text, color= server['embed_color'] )
        await ctx.send(embed = emb)


    @commands.command(usage = '-', description = '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def wlist_members(self, ctx):
        server = servers.find_one({'server':ctx.guild.id})
        if server['mod']['wlist_members'] == []:
            text = '–ü—É—Å—Ç–æ'
        else:
            text = ''
            for i in server['mod']['wlist_members']:
                r = ctx.guild.get_member(i)
                text += f"{r.mention} "

        emb = discord.Embed(title = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –∏–º–º—É–Ω–∏—Ç–µ—Ç–æ–º –∫ –∞–≤—Ç–æ-–º–æ–¥—É', description = text, color= server['embed_color'] )
        await ctx.send(embed = emb)

    @commands.command(usage = '(#channels)', description = '–î–æ–±–∞–≤–∏—Ç—å –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def add_media_channel(self, ctx, *channel:discord.TextChannel):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        wl = server['mod']['media_channels']['channels']
        for i in channel:
            wl.append(i.id)

        server['mod']['media_channels'].update({'channels': wl})
        servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
        await ctx.send("–ö–∞–Ω–∞–ª—ã —Å —Ä–µ–∂–∏–º–æ–º –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

    @commands.command(usage = '(punishments)', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤ –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def media_channel_pun(self, ctx, *punishment:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        pun = []
        for i in punishment:
            if i in ["ban", "kick", "warn", "message", "delete-all", "delete", "role-add", "role-remove"]:
                pun.append(i)
        if pun != []:
            server = servers.find_one({'server':ctx.guild.id})
            server['mod']['media_channel'].update({'repetitions': repetitions, 'punishment': pun,})
            servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server["mod"] }})

            if 'message' in pun:
                await ctx.send(f'–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É {ctx.prefix}media_channel_message\n –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è')
                server['mod']['media_channel'].update({'message': None, 'mess-type': None})

            if 'role-add' in pun or "role-remove" in pun:
                await ctx.send(f'–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É {ctx.prefix}media_channel_role\n –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏')
                server['mod']['media_channel'].update({'add-role': None, 'roleremove': None})

            await ctx.send(f'–ù–∞–∫–∞–∑–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
        else:
            await ctx.send(f'–ù–µ—Ç—É –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏')

    @commands.command(usage = '(type) (message)', description = '–î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤ –¥–º–µ–¥–∏–∞ –∫–∞–Ω–∞–ª–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def media_channel_message(self, ctx, type = None, *message):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        if type == None:
            await ctx.send(f"{ctx.prefix}media_channel_message (type) (message)\ntype - —É–∫–∞–∂–∏—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ emb –∏–ª–∏ mes\nmessge - –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏ –¥–ª–∏–Ω–Ω–æ–π –º–∞–∫—Å–∏–º—É–º 1500 —Å–∏–º–≤–æ–ª–æ–≤\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_message emb –¢—ã –ø–ª–æ—Ö–æ–π —á–µ–ª–æ–≤–µ–∫")
        else:
            if type not in ['emb', 'mes']:
                await ctx.send('–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å emb –∏–ª–∏ mes')
                return
            if len(str(message)) > 1500:
                await ctx.send(f'–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–π –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π 1500 —Å–∏–º–≤–æ–ª–æ–≤ (–°–µ–π—á–∞—Å {len(str(message))})')
                return

            server['mod']['bad_words'].update({'mess-type': type, 'message': message})
            servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
            await ctx.send("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")

    @commands.command(usage = '(type) (@role)', description = '–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –≤ –º–µ–¥–∏–∞ –∫–∞–Ω–∞–ª–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    async def media_channel_role(self, ctx, type = None, role: discord.Role = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        if type == None:
            await ctx.send(f"{ctx.prefix}bad_words_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_role add @–ø—Ä–æ–∫–∞–∑–Ω–∏–∫")
        if role != None:
            if type == 'add':
                server['mod']['media_channels'].update({'add-role': role.id})
                servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})
            if type == 'remove':
                server['mod']['media_channels'].update({'remove-role': role.id})
                servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})

            else:
                await ctx.send(f"{ctx.prefix}media_channel_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_role add @–ø—Ä–æ–∫–∞–∑–Ω–∏–∫")
                return

            await ctx.send('–†–æ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')

        else:
            await ctx.send(f"{ctx.prefix}media_channel_role (type) (role)\ntype - —É–∫–∞–∂–∏—Ç–µ add –∏–ª–∏ remove\nrole - —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å\n–ü—Ä–∏–º–µ—Ä: {ctx.prefix}bad_words_role add @–ø—Ä–æ–∫–∞–∑–Ω–∏–∫")

    @commands.command(usage = '(#channel) (events)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–≥ –∫–∞–Ω–∞–ª.', help = '–õ–æ–≥')
    async def set_log(self, ctx, channel:discord.TextChannel, *events):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        log_events = ['all', 'member', 'member_join', 'member_remove', 'member_status', 'member_nick', 'member_roles', 'member_top_role', 'member_ban', 'member_unban', 'voice', 'voice_connect', 'voice_disconnect', 'voice_reconnect', 'channel', 'channel_name', 'channel_category', 'channel_rights', 'channel_roles', 'channel_permissions_synced', 'channel_position', 'channel_slowmode', 'channel_topic', 'channel_nsfw', 'channel_bitrate', 'channel_rtc_region', 'channel_user_limit', 'channel_create', 'channel_delete', 'emoji', 'emoji_create', 'emoji_delete', 'invite', 'invite_create', 'invite_delete', 'message', 'message_edit', 'message_delete', 'guild', 'guild_afk_channel', 'guild_afk_timeout', 'guild_banner', 'guild_bitrate_limit', 'guild_default_notifications', 'guild_description', 'guild_mfa_level', 'guild_verification_level', 'guild_splash', 'guild_emoji_limit', 'guild_content_filter', 'guild_filesize_limit', 'guild_icon', 'guild_name', 'guild_owner', 'role', 'role_create', 'role_delete', 'role_color', 'role_hoist', 'role_mentionable', 'role_name', 'role_position', 'role_permissions']

        server = servers.find_one({"server": ctx.guild.id})
        lg_ev = []
        for i in events:
            if i in log_events:
                lg_ev.append(i)

        server['mod']['log_channel'].update({'channel': channel.id, 'logging': lg_ev})
        servers.update_one({'server':ctx.guild.id},{'$set':{'mod': server['mod']}})

        await ctx.send(f"–õ–æ–≥ –∫–∞–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")

    @commands.command(usage = '-', description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–≥ –∫–∞–Ω–∞–ª–µ.', help = '–õ–æ–≥')
    async def log_info(self, ctx):
        log_events = ['all', 'member', 'member_join', 'member_remove', 'member_status', 'member_nick', 'member_roles', 'member_top_role', 'member_ban', 'member_unban', 'voice', 'voice_connect', 'voice_disconnect', 'voice_reconnect', 'channel', 'channel_name', 'channel_category', 'channel_rights', 'channel_roles', 'channel_permissions_synced', 'channel_position', 'channel_slowmode', 'channel_topic', 'channel_nsfw', 'channel_bitrate', 'channel_rtc_region', 'channel_user_limit', 'channel_create', 'channel_delete', 'emoji', 'emoji_create', 'emoji_delete', 'invite', 'invite_create', 'invite_delete', 'message', 'message_edit', 'message_delete', 'guild', 'guild_afk_channel', 'guild_afk_timeout', 'guild_banner', 'guild_bitrate_limit', 'guild_default_notifications', 'guild_description', 'guild_mfa_level', 'guild_verification_level', 'guild_splash', 'guild_emoji_limit', 'guild_content_filter', 'guild_filesize_limit', 'guild_icon', 'guild_name', 'guild_owner', 'role', 'role_create', 'role_delete', 'role_color', 'role_hoist', 'role_mentionable', 'role_name', 'role_position', 'role_permissions']

        emb = discord.Embed(title = f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ª–æ–≥-–∫–∞–Ω–∞–ª–∞', description =f'{ctx.prefix}set_log (#–∫–∞–Ω–∞–ª) (*—Å–æ–±—ã—Ç–∏—è)',color=0xE52B50 )
        emb.add_field(name = '*—Å–æ–±—ã—Ç–∏—è', value = f'–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞:\n `{", ".join(log_events)}`', inline = False)
        emb.add_field(name = '–ü—Ä–∏–º–µ—Ä', value = f'{ctx.prefix}set_log {ctx.channel.mention} channel guild member ', inline = False)

        await ctx.send(embed = emb)

    @commands.command(usage = '(#channel) (count)', description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å–∫—É –¥–ª—è –ø–∏—Ü—Ü—ã!', help = '–î—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º—ã')
    async def set_pizza_board(self, ctx, channel:discord.TextChannel, count):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        try:
            count = int(count)
        except Exception:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ!")
            return

        if count < 1 or count > 55:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1-–≥–æ –¥–æ 55-—Ç–∏!")
            return

        servers.update_one({'server':ctx.guild.id},{'$set':{'pizza_board': {
        'channel': channel.id,
        'count': count,
        }}})

        await ctx.send("Pizza Board –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")

    @commands.command(usage = '[mini] [max] [percent]', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–≥—Ä—É —Å–æ–±–µ—Ä–∏ 21.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏')
    async def set_blackjack(self, ctx, mini:int = 100, max:int = 10000, percent:float = 1.25):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        if mini < 10:
            await ctx.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10-—Ç–∏ –º–æ–Ω–µ—Ç!")
            return

        if max < 20:
            await ctx.send("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 20-—Ç–∏ –º–æ–Ω–µ—Ç!")
            return

        if max < mini:
            await ctx.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã!")
            return

        server['economy']['games']['blackjack'].update({'mini': mini})
        server['economy']['games']['blackjack'].update({'max': max})
        server['economy']['games']['blackjack'].update({'percent': percent})

        servers.update_one({'server':ctx.guild.id},{'$set':{'economy': server['economy']}})

        await ctx.send(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {mini}\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {max}\n–£–º–Ω–æ–∂–µ–Ω–∏–µ —Å—É–º–º—ã –ø—Ä–∏ –ø–æ–±–µ–¥–µ: {percent}" )

    @commands.command(usage = '[mini] [max] [percent]', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–≥—Ä—É —Å–ª–æ—Ç—ã.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏')
    async def set_slots(self, ctx, mini:int = 100, max:int = 10000, percent:float = 1.25):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        if mini < 10:
            await ctx.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10-—Ç–∏ –º–æ–Ω–µ—Ç!")
            return

        if max < 20:
            await ctx.send("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 20-—Ç–∏ –º–æ–Ω–µ—Ç!")
            return

        if percent < 1.0:
            await ctx.send("–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1%!")
            return

        if max < mini:
            await ctx.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã!")
            return

        server['economy']['games']['slots'].update({'mini': mini})
        server['economy']['games']['slots'].update({'max': max})
        server['economy']['games']['slots'].update({'percent': percent})

        servers.update_one({'server':ctx.guild.id},{'$set':{'economy': server['economy']}})

        await ctx.send(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {mini}\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {max}\n–£–º–Ω–æ–∂–µ–Ω–∏–µ —Å—É–º–º—ã –ø—Ä–∏ –ø–æ–±–µ–¥–µ: {percent}" )

    @commands.command(usage = '[reward] [percent]', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏')
    async def set_daily(self, ctx, reward:int = 200, reward_percent:float = 1.05):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        if reward < 10:
            await ctx.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10-—Ç–∏ –º–æ–Ω–µ—Ç!")
            return

        if reward_percent < 1.0:
            await ctx.send("–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1%!")
            return

        server['economy']['daily_reward'].update({'reward': reward})
        server['economy']['daily_reward'].update({'reward_percent': reward_percent})

        servers.update_one({'server':ctx.guild.id},{'$set':{'economy': server['economy']}})

        await ctx.send(f"–ù–∞–≥—Ä–∞–¥–∞: {reward}\n–£–º–Ω–æ–∂–µ–Ω–∏–µ —Å—É–º–º—ã: {reward_percent}" )

    @commands.command(usage = '(lvl) (money) (items)', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –≥–æ–ª–æ—Å–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤–æ–π—Å–µ')
    async def add_voice_reward(self, ctx, lvl:int, money:int, *item:int):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        if lvl < 0:
            await ctx.send("–ù–∞–≥—Ä–∞–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è —Ä–∞–Ω—å—à–µ –ø–µ—Ä–≤—ã—Ö —á–µ–º –∑–∞ 1-—ã–π —É—Ä–æ–≤–µ–Ω—å!")
            return
        if money < 0:
            await ctx.send("–ú–æ–Ω–µ—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0-–ª—è!")
            return

        server = servers.find_one({"server": ctx.guild.id})
        a = server['voice_reward']

        if server['premium'] != True:
            mk = 15
            if len(a.keys()) >= 10:
                await ctx.send("–ù–µ –∏–º–µ—è –ø–æ–¥–ø–∏—Å–∫–∏ premium, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –±–æ–ª—å—à–µ 10-—Ç–∏ –Ω–∞–≥—Ä–¥–∞ –∑–∞ –≤–æ–π—Å! ")
                return

        if server['premium'] == True:
            mk = 40

        if server['premium'] != True:
            if len(a.keys()) >= 20:
                await ctx.send("–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ 20-—Ç–∏ –Ω–∞–≥—Ä–∞–¥! ")
                return

        items = []
        for i in item:
            try:
                server['items'][str(i)]
                items.append(i)
            except:
                pass

        if len(items) == 0:
            await ctx.send("–ù–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!")
            return
        if len(items) > mk:
            await ctx.send(f"–ù–µ–ª—å–∑—è –≤—ã–¥–∞—Ç—å –±–æ–ª—å—à–µ {mk} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ —Ä–∞–∑!")
            return

        a.update({ str(time): {'items': items, 'money': money} })
        servers.update_one( {"server": ctx.guild.id}, {"$set": {'voice_reward': a}} )
        await ctx.send(f'–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ {lvl} —É—Ä–æ–≤–µ–Ω—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–∞!')

    @commands.command(usage = '(lvl)', description = '–£–¥–∞–ª–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —Å–µ—Å—Å–∏—é –≤ –≤–æ–π—Å–µ.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤–æ–π—Å–µ')
    async def delete_voice_reward(self,ctx, lvl:int):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        a = server['voice_reward']

        try:
            del a[str(lvl)]
        except KeyError:
            await ctx.send("–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return

        servers.update_one( {"server": ctx.guild.id}, {"$set": {'voice_reward': a}} )
        await ctx.send(f'–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ {lvl} —É—Ä–æ–≤–µ–Ω—å –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞!')

    @commands.command(usage = '-', description = '–°–ø–∏—Å–æ–∫ –Ω–∞–≥—Ä–∞–¥ –∑–∞ —Å–µ—Å—Å–∏—é –≤ –≤–æ–π—Å–µ.', help = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤–æ–π—Å–µ')
    async def vr_list(self,ctx):
        global servers
        server = servers.find_one({'server':ctx.guild.id})

        if server['voice_reward'] == {}:
            await ctx.send("–¢—É—Ç –ø—É—Å—Ç–æ! üòØ")
            return

        solutions = ['‚óÄ', '‚ñ∂', '‚ùå']
        member = ctx.author
        reaction = 'a'
        numberpage = 1

        keys = []
        for i in list(server['voice_reward'].keys()):
            keys.append(int(i))
        keys = sorted(keys)

        if len(keys) % 6 != 0:
            l = int(len(keys) / 6 + 1)
        else:
            l = int(len(keys) / 6)

        def top_embed(numberpage):
            nonlocal ctx
            nonlocal l

            num1 = 0
            num2 = 0
            page = numberpage
            text = ''

            if numberpage != 1:
                numberpage *= 6
                numberpage -= 6

                if numberpage > 5:
                    numberpage += 1

            if len(keys) <= 6:
                emb = discord.Embed(title = '–ù–∞–≥—Ä–∞–¥—ã –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤–æ–π—Å–µ', description = '–ù–∞–≥—Ä–¥–∞ –≤—ã–¥–∞—ë—Ç—Å—è –µ—Å–ª–∏ –≤—ã –ø—Ä–æ–≤–∏–ª–∏ –≤ –≤–æ–π—Å–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–º–µ–Ω–∏, –∑–∞ 1 —Å–µ–∞–Ω—Å',color=server['embed_color'])
                for i in keys:
                    ii = []
                    for n in server['voice_reward'][str(i)]['items']:
                        ii.append(server['items'][str(n)]['name'])

                    mr = server['voice_reward'][str(i)]['money']

                    emb.add_field(name = f"–í—Ä–µ–º—è –≤ –≤–æ–π—Å–µ {i}", value = f"–ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(ii)}\n–ú–æ–Ω–µ—Ç—ã: {mr}")

            elif len(keys) > 6:
                emb = discord.Embed(title = '–ù–∞–≥—Ä–∞–¥—ã –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤–æ–π—Å–µ', description = '–ù–∞–≥—Ä–¥–∞ –≤—ã–¥–∞—ë—Ç—Å—è –µ—Å–ª–∏ –≤—ã –ø—Ä–æ–≤–∏–ª–∏ –≤ –≤–æ–π—Å–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–º–µ–Ω–∏, –∑–∞ 1 —Å–µ–∞–Ω—Å',color=server['embed_color'])
                for i in keys:
                    num1 += 1
                    if num1 >= numberpage and num2 < 5:
                        num2 += 1

                        ii = []
                        for n in server['voice_reward'][str(i)]['items']:
                            ii.append(server['items'][str(n)]['name'])

                        mr = server['voice_reward'][str(i)]['money']

                        emb.add_field(name = f"–£—Ä–æ–≤–µ–Ω—å {i}", value = f"–ü—Ä–µ–¥–º–µ—Ç—ã: {', '.join(ii)}\n–ú–æ–Ω–µ—Ç—ã: {mr}")


            emb.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{l}")
            return emb

        msg = await ctx.send(embed = top_embed(numberpage))

        def check( reaction, user):
            nonlocal msg
            return user == ctx.author and str(reaction.emoji) in solutions and str(reaction.message) == str(msg)

        async def rr():
            nonlocal reaction
            nonlocal numberpage
            nonlocal l
            if str(reaction.emoji) == '‚óÄ':
                await msg.remove_reaction('‚óÄ', member)
                numberpage -= 1
                if numberpage < 1:
                    numberpage = 1

                await msg.edit(embed = top_embed(numberpage))


            elif str(reaction.emoji) == '‚ñ∂':
                await msg.remove_reaction('‚ñ∂', member)
                numberpage += 1
                if numberpage > l:
                    numberpage = l

                await msg.edit(embed = top_embed(numberpage))


            elif str(reaction.emoji) == '‚ùå':
                await msg.clear_reactions()
                return

        async def reackt():
            nonlocal reaction
            try:
                reaction, user = await self.bot.wait_for('reaction_add', timeout=30.0, check = check)
            except asyncio.TimeoutError:
                await msg.clear_reactions()
            else:
                await rr(), await reackt()

        if len(keys) > 6:
            for x in solutions:
                await msg.add_reaction(x)
            await reackt()

    @commands.command(usage = '(#channel) (category) (message)', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —Ç–∏–∫–µ—Ç–æ–≤.', help = '–î—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º—ã')
    async def set_tickets(self, ctx, channel:discord.TextChannel = None, category:int = None, *, message = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        if category == None:
            overwrites = {
                    guild.default_role: discord.PermissionOverwrite(view_channel=False, send_messages=False)
                         }
            cat = await ctx.guild.create_category('Tickets', overwrites = overwrites)
            category = cat.id
            if channel == None:
                channel = await ctx.guild.create_text_channel(name=f"tickets", category=cat)

        c = ctx.guild.get_channel(category)
        if c == None or type(c) != discord.CategoryChannel:
            await ctx.send(f"–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –ª–∏–±–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —ç—Ç–æ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç. –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
            return

        if message == None:
            message = "–î–ª—è —Å–æ–∑–¥–ª–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ üí¨"
        else:
            if len(message) > 2000:
                await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω—å—à–µ 2–∫ —Å–∏–º–æ–≤–ª–æ–≤!")
                return

        emb = discord.Embed(title = f'', description = f'{message}', color=server['embed_color'] )
        msg = await channel.send(embed = emb)
        await msg.add_reaction('üí¨')

        await ctx.send(f"–¢–∏–∫–µ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")

        server['tickets'].update({'t_message': msg.id})
        server['tickets'].update({'category': category})
        server['tickets'].update({'tick': {} })
        server['tickets'].update({'t_n': 0 })
        servers.update_one({'server':ctx.guild.id},{'$set':{'tickets': server['tickets']}})

    @commands.command(usage = '[mini] [max]', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–≥—Ä—É —à–∞–Ω—Å.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏')
    async def set_chance(self, ctx, mini:int = 100, max:int = 10000):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return

        server = servers.find_one({"server": ctx.guild.id})

        if mini < 10:
            await ctx.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10-—Ç–∏ –º–æ–Ω–µ—Ç!")
            return

        if max < 20:
            await ctx.send("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 20-—Ç–∏ –º–æ–Ω–µ—Ç!")
            return

        if max < mini:
            await ctx.send("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã!")
            return

        server['economy']['games']['chance'].update({'mini': mini})
        server['economy']['games']['chance'].update({'max': max})

        servers.update_one({'server':ctx.guild.id},{'$set':{'economy': server['economy']}})

        await ctx.send(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {mini}\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {max}" )

    @commands.command(usage = '(hex color)', description = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ü–≤–µ—Ç –≤—Å–µ—Ö —ç–º–±–µ—Ç–æ–≤.', help = '–î—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º—ã')
    async def embed_color(self, ctx, color):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        try:

            emb = discord.Embed(description = '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',color = int(color, 16) )
            status = True
            msg = await ctx.send(embed = emb)

            try:
                await msg.delete()
            except Exception:
                pass

        except Exception:
            status = False

        if status == True:
            servers.update_one({'server':ctx.guild.id},{'$set':{'embed_color': color}})
            await ctx.send("–¶–≤–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")


        else:
            await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Ü–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex, –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç–µ—Ä—Ç—å –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç—É—Ç https://csscolor.ru/")
            return

    @commands.command(usage = '(hex color\-) (message)', description = '–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞.')
    async def embed(self, ctx, color, *, message = None):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        server = servers.find_one({'server':ctx.guild.id})

        if message == None:
            await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return

        if color == '-':
            color = server['embed_color']
            status = True

            emb = discord.Embed(description = f"{''.join(message)}", color = color)
            msg = await ctx.send(embed = emb)

        else:
            try:

                emb = discord.Embed(description = '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',color = int(color, 16) )
                status = True

            except Exception:
                status = False

            if status == True:
                emb = discord.Embed(description = f"{''.join(message)}", color = int(color, 16) )
                msg = await ctx.send(embed = emb)

            else:
                await ctx.send("–¢—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å —Ü–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ hex, –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç–µ—Ä—Ç—å –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç—É—Ç https://csscolor.ru/")
                return

    @commands.command(usage = '(xp)', description = '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏')
    async def set_xp(self, ctx, xp:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        if xp < 1:
            await ctx.send("–û–ø—ã—Ç –∑–∞ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ —á–µ–º 1!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['economy'].copy()
        a.update({"lvl_xp": xp})

        servers.update_one({'server':ctx.guild.id},{'$set':{'economy': a}})
        await ctx.send(f"–û–ø—ã—Ç –∑–∞ —É—Ä–æ–≤–µ–Ω—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

    @commands.command(usage = '(amout)', description = '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –º–æ–Ω–µ—Ç.', help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏')
    async def start_money(self, ctx, amout:str):
        global servers
        if funs.roles_check(ctx.author, ctx.guild.id) == False:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
            return
        if amout < 0:
            await ctx.send("–°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!")
            return

        server = servers.find_one({'server':ctx.guild.id})
        a = server['economy'].copy()
        a.update({"start_money": amout})

        servers.update_one({'server':ctx.guild.id},{'$set':{'economy': a}})
        await ctx.send(f"–°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")




    # @commands.command(aliases = ['settings', 'sboard', 'sb'])
    # async def info_board(self, ctx):
    #     server = servers.find_one({"server": ctx.guild.id})
    #     emb = discord.Embed(description = '**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å**', color= server['embed_color'] )
    #
    #     emb.add_field(name = '| –ü—Ä–µ—Ñ–∏–∫—Å', value = f"{server['prefix']}\n**| –ö–æ–º–∞–Ω–¥–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏**\n{ctx.prefix}it_prefix", inline = True)
    #
    #     if server['voice']['voice_channel'] != None:
    #         v_cat = ctx.guild.get_channel(server['voice']['voice_category'])
    #         emb.add_field(name = '| –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ-–≤–æ–π—Å—ã', value = f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {v_cat.name}\n–ö–∞–Ω–∞–ª: <#{server['voice']['voice_channel']}>", inline = True)
    #
    #         emb.add_field(name = '| –ö–æ–º–∞–Ω–¥—ã –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö-–≤–æ–π—Å–æ–≤', value = f"{ctx.prefix}setvoicechannel\n{ctx.prefix}clearvoicechannel", inline = True)
    #
    #     if server['upsend_sett']['upsend'] != None:
    #         emb.add_field(name = '| –†–æ–ª–∏ –∑–∞ —É—Ä–æ–≤–µ–Ω—å', value = f"–ö–∞–Ω–∞–ª: <#{server['upsend_sett']['upsend']}>\n–≠–º–±–µ—Ç: {server['upsend_sett']['emb_st']}\n–†–æ–ª–∏: 1Ô∏è‚É£".replace('True','<:n:869159450588635196>').replace('False','<:f:869169592201777224>'), inline = True)
    #
    #         if server['upsend_sett']['up_message'] != None:
    #             emb.add_field(name = '| –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞ —É—Ä–æ–≤–µ–Ω—å', value = f"`{server['upsend_sett']['up_message']}`", inline = True)
    #
    #         emb.add_field(name = '| –ö–æ–º–∞–Ω–¥—ã —Ä–æ–ª–µ–π –∑–∞ —É—Ä–æ–≤–µ–Ω—å', value = f"{ctx.prefix}setupchannel\n{ctx.prefix}addup", inline = True)
    #
    #         emb.add_field(name = '| ', value = f"{ctx.prefix}upoff\n{ctx.prefix}deleteup", inline = True)
    #
    #
    #     if server['welcome'] != {}:
    #         emb.add_field(name = '| –í—Ö–æ–¥', value = f"–ö–∞–Ω–∞–ª: <#{server['send']['joinsend']}>\n–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: [–°—Å—ã–ª–∫–∞]({server['send']['avatar_join_url']})\n–¢–∏–ø: {server['send']['join_position_avatar']}", inline = True)
    #         emb.add_field(name = '| –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ö–æ–¥–∞', value = f"–¶–≤–µ—Ç welcome: {server['welcome']['wel_fill']}\n–¶–≤–µ—Ç –∏–º–µ–Ω–∏: {server['welcome']['nam_fill']}\n–¶–≤–µ—Ç —Ä–∞–º–∫–∏: {server['welcome']['el_fill']}\n–¢–µ–∫—Å—Ç: `{server['welcome']['wel_text']}`", inline = True)
    #         emb.add_field(name = '| –ö–æ–º–∞–Ω–¥—ã –≤—Ö–æ–¥–∞', value = f"{ctx.prefix}set_join\n{ctx.prefix}set_join_channel", inline = True)
    #     else:
    #         emb.add_field(name = '| –í—Ö–æ–¥', value = f"–í—Ö–æ–¥ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω", inline = True)
    #
    #     if server['goodbye'] != {}:
    #         emb.add_field(name = '| –í—ã—Ö–æ–¥', value = f"–ö–∞–Ω–∞–ª: <#{server['send']['leavensend']}>\n–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: [–°—Å—ã–ª–∫–∞]({server['send']['avatar_leave_url']})\n–¢–∏–ø: {server['send']['leave_position_avatar']}", inline = True)
    #         emb.add_field(name = '| –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞', value = f"–¶–≤–µ—Ç goodbye: {server['goodbye']['wel_fill_l']}\n–¶–≤–µ—Ç –∏–º–µ–Ω–∏: {server['goodbye']['nam_fill_l']}\n–¶–≤–µ—Ç —Ä–∞–º–∫–∏: {server['goodbye']['el_fill_l']}\n–¢–µ–∫—Å—Ç: `{server['goodbye']['lea_text']}`", inline = True)
    #         emb.add_field(name = '| –ö–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞', value = f"{ctx.prefix}set_leave\n{ctx.prefix}set_leave_channel", inline = True)
    #     else:
    #         emb.add_field(name = '| –í—ã—Ö–æ–¥', value = f"–í—ã—Ö–æ–¥ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω", inline = True)
    #
    #     if server['emoji']['emoji_channel'] != None:
    #         emb.add_field(name = '| –ö–∞–Ω–∞–ª —Å —ç–º–æ–¥–∂–∏', value = f"–ö–∞–Ω–∞–ª: <#{server['emoji']['emoji_channel']}>", inline = True)
    #         emb.add_field(name = '| –≠–º–æ–¥–∂–∏', value = f"–≠–º–æ–¥–∂–∏: {' '.join(server['emoji']['emojis'])}>", inline = True)
    #         emb.add_field(name = '| –ö–æ–º–∞–Ω–¥—ã —ç–º–æ–¥–∂–∏-–∫–∞–Ω–∞–ª–∞', value = f"{ctx.prefix}set_emoji_channel", inline = True)
    #
    #
    #     await ctx.send(embed = emb)


def setup(bot):
    bot.add_cog(settings(bot))
